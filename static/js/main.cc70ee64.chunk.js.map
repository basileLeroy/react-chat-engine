{"version":3,"sources":["Utilities/history.js","../../src/components/Context/index.js","../../src/actions/index.js","../../src/actions/auth.js","../../src/actions/messages/getMessages.js","../../src/actions/messages/readMessage.js","../../src/components/Socket/index.js","../../src/actions/chats/newChat.js","../../src/actions/chats/getLatestChats.js","../../src/components/ChatEngine/ChatList/ChatLoader.js","../../src/components/ChatEngine/ChatList/NewChatForm/index.js","../../src/components/ChatEngine/ChatList/ChatCard.js","../../src/components/ChatEngine/Utilities/dateToString.js","../../src/components/ChatEngine/ChatList/index.js","../../src/components/ChatEngine/ChatFeed/ChatHeader/ChatListDrawer.js","../../src/components/ChatEngine/ChatSettings/PeopleSettings/Person.js","../../src/actions/people/removePerson.js","../../src/components/ChatEngine/ChatSettings/PeopleSettings/PersonForm/Option.js","../../src/components/ChatEngine/ChatSettings/PeopleSettings/PersonForm/index.js","../../src/actions/people/getOtherPeople.js","../../src/components/ChatEngine/ChatSettings/PeopleSettings/index.js","../../src/components/ChatEngine/ChatSettings/PhotosSettings/Thumbnail.js","../../src/components/ChatEngine/ChatSettings/PhotosSettings/index.js","../../src/components/ChatEngine/ChatSettings/OptionsSettings/index.js","../../src/actions/chats/deleteChat.js","../../src/components/ChatEngine/ChatSettings/ChatSettingsTop/TitleForm/index.js","../../src/actions/chats/editChat.js","../../src/components/ChatEngine/ChatSettings/ChatSettingsTop/index.js","../../src/components/ChatEngine/ChatSettings/index.js","../../src/components/ChatEngine/ChatFeed/ChatHeader/ChatSettingsDrawer.js","../../src/components/ChatEngine/ChatFeed/ChatHeader/index.js","../../src/components/ChatEngine/ChatFeed/Steps/AuthFail.js","../../src/components/ChatEngine/ChatFeed/Steps/Loading.js","../../src/components/ChatEngine/ChatFeed/Steps/Welcome.js","../../src/components/ChatEngine/ChatFeed/MessageBubble/DatePartition.js","../../src/components/ChatEngine/ChatFeed/MessageBubble/Thumbnail.js","../../src/components/ChatEngine/Utilities/colorMapping.js","../../src/components/ChatEngine/components/Avatar/Dot.js","../../src/components/ChatEngine/ChatFeed/MessageBubble/MyMessage.js","../../src/components/ChatEngine/ChatFeed/MessageBubble/TheirMessage.js","../../src/components/ChatEngine/ChatFeed/MessageBubble/SendingMessage.js","../../src/components/ChatEngine/ChatFeed/MessageBubble/index.js","../../src/components/ChatEngine/ChatFeed/NewMessageForm/Thumbnail.js","../../src/components/ChatEngine/ChatFeed/NewMessageForm/FileRow.js","../../src/components/ChatEngine/ChatFeed/NewMessageForm/ImagesInput.js","../../src/components/ChatEngine/ChatFeed/NewMessageForm/index.js","../../src/actions/messages/sendMessage.js","../../src/actions/typing/isTyping.js","../../src/components/ChatEngine/ChatFeed/IsTyping.js","../../src/components/ChatEngine/ChatFeed/index.js","../../src/components/ChatEngine/index.js","../../src/components/index.js","../../src/components/Socket/ChatSocket.js","../../src/actions/chats/getChat.js","../../src/actions/people/addPerson.js","../../src/components/ChatEngine/components/Avatar/Avatar.js","../../src/components/ChatEngine/components/Button/Button.js","../../src/components/ChatEngine/components/Input/TextInput.js","../../src/components/ChatEngine/components/Input/TextAreaInput.js","../../src/components/ChatEngine/components/Input/AutocompleteInput.js","Pages/ChatWithMePage.js","Pages/DirectChatsPage.js","Actions/index.js","Actions/Accounts/login.js","Actions/Accounts/logout.js","Pages/ChatEngine.js","Pages/HomePage.js","Pages/index.js","Reducers/AccountsReducer.js","Reducers/index.js","App.js","index.js"],"names":["createBrowserHistory","ChatEngineContext","createContext","ChatEngineWrapper","props","useState","value","setTypingData","getApiUrl","getHeaders","chatAccessKey","userSecret","getMessages","chatId","callback","axios","str","headers","response","error","console","readMessage","messageId","last_read","Socket","useContext","setTypingCounter","newChats","chats","chat","setChats","wsStart","development","rootHost","project","publicKey","secret","userPassword","url","userName","onOpen","setConn","setConnecting","onConnect","onClose","onMessage","eventJSON","JSON","projectID","setActiveChat","onEditChat","_","sortedChats","Object","a","b","aDate","Date","bDate","sortChats","parseInt","message","sendingMessages","setSendingMessages","id","newMessages","messages","setMessages","conn","activeChat","person","newTypingCounter","typingCounter","handleEvent","reconnectIntervalInMilliSeconds","newChat","data","getLatestChats","count","ChatLoader","ref","useRef","isVisible","observer","IntersectionObserver","setIntersecting","entry","useEffect","useOnScreen","NewChatForm","onSubmit","event","title","setValue","handleSubmit","style","height","label","width","handleChange","e","textAlign","icon","type","ChatCard","extraStyle","styles","otherPerson","key","index","lastMessage","length","onClick","className","readLastMessage","chat_person","float","borderRadius","backgroundColor","display","date","day","month","year","sent","daySinceSent","chatContainer","padding","paddingBottom","cursor","titleText","fontWeight","whiteSpace","overflow","messageText","color","fontSize","border","ChatList","didMountRef","chatList","setHasMoreChats","onGetChats","renderChats","hasMoreChats","onVisible","chatListContainer","maxHeight","overflowX","borderRight","chatsContainer","newChatContainer","position","bottom","ChatListDrawer","setIsOpen","outline","isOpen","drawerContainer","titleContainer","zIndex","top","left","closeIcon","Person","username","removePerson","admin","onMouseEnter","setSelected","onMouseLeave","avatar","is_online","paddingLeft","first_name","renderPersonText","selected","theme","onRemovePerson","Option","setFocused","focused","option","PersonForm","others","successCallback","errorCallback","getOtherPeople","setState","invitePerson","addPerson","getOthers","marginBottom","state","options","onFocus","renderOption","PeopleSettings","collapsed","hovered","borderTop","collapseIcon","people","chatPerson","renderChatPeople","right","Thumbnail","attachment","paddingTop","alt","src","container","image","objectFit","PhotosSettings","OptionsSettings","deleteChat","NewMessageForm","editChat","default","ChatSettingsTop","topPeople","show_online","renderOnePerson","renderTwoPeople","renderThreePeople","ChatSettings","filler","settingsContainer","borderLeft","ChatSettingsDrawer","setConfiguration","maxScreenClass","gutterWidth","ChatHeader","titleSection","xs","sm","hour","minute","second","dayStr","timeStr","timeSinceDate","mobileOptiom","subtitleText","AuthFail","href","Loading","spin","Welcome","months","suffix","DatePartition","created","lastDate","getDate","thisDate","lastCreated","date_time","dayDuffix","time","timeSuffix","String","formatDate","dateText","loadingContainer","marginRight","maxWidth","minHeight","minWidth","thumbnail","paddingRight","colors","stringToColor","sum","i","stringToNumber","updateImg","this","split","componentDidMount","componentDidUpdate","render","customStyle","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","dot","Message","nextMessage","attachments","topRightRadius","bottomRightRadius","renderAttachments","md","marginLeft","renderReads","myMessage","TheirMessage","topLeftRadius","bottomLeftRadius","theirMessage","cusor","nameText","SendingMessage","sending","setHovered","URL","imageSquare","FileRow","file","onRemove","ImagesInput","files","encType","htmlFor","multiple","accept","visibility","onChange","Array","indexes","onSelect","trigger","mod","text","sender_id","formdata","sendMessage","newSendingMessages","onSelectFiles","isTyping","NewMessageFormContainer","inputContainer","IsTyping","ChatFeed","onReadMessage","setCurrentChat","onGetMessages","setTimeout","animateScroll","containerId","typers","typingData","setDuration","connecting","keys","lastMessageKey","nextMessageKey","renderMessages","renderSendingMessages","renderTypers","feedContainer","overflowY","ChatEngine","context","ChatEngineApp","ChatSocket","getChat","onGetChat","chatID","avatarText","status","hoverStyle","themeStyle","button","dangerButton","hoverButton","opacity","target","defaultStyle","placeholder","onBlur","input","boxSizing","focusInput","resize","textarea","document","Math","onKeyDown","rows","fontFamily","showAll","getNames","max","results","renderOptions","close","HomePage","Component","loading","c","senderUsername","DirectChatPage","createDirectChat","creds","is_direct_chat","renderChatForm","renderNewChatForm","login","successFunc","errorFunc","dispatch","get","rootUrl","then","payload","catch","logout","hasSetLink","setLink","isEmpty","prod","window","location","host","indexOf","connect","accounts","bindActionCreators","match","params","log","RootPage","history","path","component","ChatWithMePage","DirectChatsPage","initialState","combineReducers","action","form","formReducer","persistConfig","storage","persistedReducer","persistReducer","rootReducer","store","applyMiddleware","promise","thunk","createStore","createStoreWithMiddleware","persistor","persistStore","App","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.cc70ee64.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history'\r\n\r\n\r\nexport default createBrowserHistory();\r\n","import React, { useState, createContext } from 'react'\r\n\r\nexport const ChatEngineContext = createContext()\r\n\r\nexport const ChatEngineWrapper = props => {\r\n    const [connecting, setConnecting] = useState(true)\r\n    const [conn, setConn] = useState(null)\r\n    const [chats, setChats] = useState(null)\r\n    const [messages, setMessages] = useState({})\r\n    const [sendingMessages, setSendingMessages] = useState({})\r\n    const [activeChat, setActiveChat] = useState(null)\r\n    const [typingCounter, setTypingCounter] = useState({})\r\n    const [typingData, setTypingData] = useState({})\r\n\r\n    const value = {\r\n        connecting, setConnecting,\r\n        conn, setConn,\r\n        chats, setChats,\r\n        messages, setMessages,\r\n        sendingMessages, setSendingMessages,\r\n        activeChat, setActiveChat,\r\n        typingCounter, setTypingCounter,\r\n        typingData, setTypingData,\r\n    }\r\n\r\n    return (\r\n        <ChatEngineContext.Provider value={value}>\r\n            {props.children}\r\n        </ChatEngineContext.Provider>\r\n    )\r\n}\r\n","export function getApiUrl(props) { \r\n    if (props && props.development) {\r\n        return 'http://127.0.0.1:8000'\r\n    }\r\n    return 'https://api.chatengine.io'\r\n}\r\n","export function getHeaders(props) { \r\n    if (props.chatID) {\r\n        return { \r\n            \"public-key\": props.publicKey ? props.publicKey : props.projectID,\r\n            \"chat-id\": props.chatID,\r\n            \"access-key\": props.chatAccessKey,\r\n        }\r\n    }\r\n\r\n    return { \r\n        \"Public-Key\": props.publicKey ? props.publicKey : props.projectID,\r\n        \"User-Name\": props.userName,\r\n        \"User-Secret\": props.userPassword ? props.userPassword : props.userSecret,\r\n    }\r\n}\r\n","import axios from 'axios'\r\nimport * as str from '../../actions'\r\nimport { getHeaders } from '../auth'\r\n\r\nexport function getMessages(props, chatId, callback) {\r\n    axios.get(\r\n        `${str.getApiUrl(props)}/chats/${chatId}/messages/`,\r\n        { headers: getHeaders(props) }\r\n    )\r\n\r\n    .then((response) => {\r\n        // Run hook in Axios on GET requests\r\n        props.onGetMessages && props.onGetMessages(chatId, response.data)\r\n\r\n        callback && callback(chatId, response.data)\r\n    })\r\n    \r\n    .catch((error) => {\r\n        console.log('Fetch Messages Error', error)\r\n    });\r\n}","import axios from 'axios'\r\nimport * as str from '../../actions'\r\nimport { getHeaders } from '../auth'\r\n\r\nexport function readMessage(props, chatId, messageId, callback) {\r\n    axios.patch(\r\n        `${str.getApiUrl(props)}/chats/${chatId}/people/`,\r\n        { last_read: messageId },\r\n        { headers: getHeaders(props) }\r\n    )\r\n\r\n    .then((response) => {\r\n        callback && callback(response.data)\r\n    })\r\n    \r\n    .catch((error) => {\r\n        console.log('Read Message Error', error)\r\n    });\r\n}","import React, { useContext } from 'react'\r\n\r\nimport { ChatEngineContext } from '../Context'\r\n\r\nimport { readMessage } from '../../actions/messages'\r\n\r\nimport { WebSocket } from 'nextjs-websocket'\r\n\r\nconst Socket = props => {\r\n    const {\r\n      setConnecting,\r\n      conn, setConn,\r\n      chats, setChats,\r\n      messages, setMessages,\r\n      sendingMessages, setSendingMessages,\r\n      activeChat, setActiveChat,\r\n      typingCounter, setTypingCounter,\r\n    } = useContext(ChatEngineContext)\r\n\r\n    function sortChats(chats) {\r\n        return Object.values(chats).sort((a, b) => { \r\n            const aDate = a.last_message.created ? new Date(a.last_message.created) : new Date(a.created)\r\n            const bDate = b.last_message.created ? new Date(b.last_message.created) : new Date(b.created)\r\n            return new Date(bDate) - new Date(aDate); \r\n        })\r\n    }\r\n\r\n    // Common Context Handlers\r\n\r\n    function onEditChat(chat) {\r\n        if (chats) {\r\n            const newChats = {...chats}\r\n            newChats[chat.id] = chat\r\n            setChats(newChats)\r\n        }\r\n\r\n        props.onEditChat && props.onEditChat(chat)\r\n    }\r\n\r\n    function onConnect(conn) {\r\n        setConn(conn)\r\n        setConnecting(false)\r\n        \r\n        props.onConnect && props.onConnect(conn)\r\n    }\r\n    \r\n    // Socket Events\r\n\r\n    function handleEvent(event) {\r\n        const eventJSON = JSON.parse(event)\r\n\r\n        if (eventJSON.action === 'login_error') {\r\n            console.log(\r\n                `Your login credentials were not correct: \\n\r\n                Project ID: ${props.projectID} \\n\r\n                Username: ${props.userName} \\n\r\n                User Secret: ${props.userSecret}\\n\r\n                Double check these credentials to make sure they're correct.\\n\r\n                If all three are correct, try resetting the username and secret in the Online Dashboard or Private API.`\r\n            )\r\n\r\n            setConn(undefined)\r\n\r\n            props.onFailAuth && props.onFailAuth(conn)\r\n\r\n        } else if (eventJSON.action === 'new_chat') {\r\n            const chat = eventJSON.data\r\n            \r\n            if (chats) {\r\n                const newChats = {...chats}\r\n                newChats[chat.id] = chat\r\n                setChats(newChats)\r\n                setActiveChat(chat.id)\r\n            }\r\n\r\n            props.onNewChat && props.onNewChat(eventJSON.data)\r\n\r\n        } else if (eventJSON.action === 'edit_chat') {\r\n            onEditChat(eventJSON.data)\r\n            \r\n        } else if (eventJSON.action === 'delete_chat') {\r\n            const chat = eventJSON.data \r\n\r\n            if (chats) {\r\n                chats[chat.id] = undefined\r\n                \r\n                setChats(chats)\r\n          \r\n                if (!_.isEmpty(chats)) {\r\n                    const sortedChats = sortChats(chats)\r\n                    setActiveChat(sortedChats[0] ? parseInt(sortedChats[0].id) : 0)\r\n                }\r\n            }\r\n\r\n            props.onDeleteChat && props.onDeleteChat(chat)\r\n\r\n        } else if (eventJSON.action === 'add_person') {\r\n            onEditChat(eventJSON.data)\r\n            \r\n            props.onAddPerson && props.onAddPerson(eventJSON.data)\r\n\r\n        } else if (eventJSON.action === 'remove_person') {\r\n            onEditChat(eventJSON.data)\r\n\r\n            props.onRemovePerson && props.onRemovePerson(eventJSON.data)\r\n\r\n        } else if (eventJSON.action === 'new_message') {\r\n            const { id, message } = eventJSON.data\r\n\r\n            if (typeof message.custom_json === \"string\" && message.custom_json.indexOf('sender_id') !== -1) {\r\n                sendingMessages[JSON.parse(message.custom_json).sender_id] = undefined\r\n                setSendingMessages(sendingMessages)\r\n            }\r\n        \r\n            if (id === activeChat) {\r\n                const newMessages = {...messages}\r\n                newMessages[message.id] = message\r\n                setMessages(newMessages)\r\n            }\r\n          \r\n            if (message.sender_username !== props.userName) {\r\n                readMessage(conn, activeChat, message.id, (chat) => onEditChat(chat))\r\n            }\r\n\r\n            props.onNewMessage && props.onNewMessage(id, message)\r\n\r\n        } else if (eventJSON.action === 'edit_message') {\r\n            const { id, message } = eventJSON.data\r\n            \r\n            if (id === activeChat) {\r\n                messages[message.id] = message\r\n                setMessages(messages)\r\n            }\r\n\r\n            props.onEditMessage && props.onEditMessage(id, message)\r\n\r\n        } else if (eventJSON.action === 'delete_message') {\r\n            const { id, message } = eventJSON.data\r\n\r\n            if (id === activeChat) {\r\n                messages[message.id] = undefined\r\n                setMessages(messages)\r\n            }\r\n\r\n            props.onDeleteMessage && props.onDeleteMessage(id, message)\r\n        \r\n        } else if (eventJSON.action === 'is_typing') {\r\n            const { id, person } = eventJSON.data\r\n            let newTypingCounter = {...typingCounter}\r\n\r\n            if (newTypingCounter[id] && newTypingCounter[id][person]) {\r\n                newTypingCounter = {\r\n                    ...newTypingCounter,\r\n                    [id]: {\r\n                    ...newTypingCounter[id],\r\n                    [person]: newTypingCounter[id][person] + 1\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                newTypingCounter = {\r\n                    ...newTypingCounter,\r\n                    [id]: {\r\n                    ...newTypingCounter[id],\r\n                    [person]: 1\r\n                    }\r\n                }\r\n            }\r\n                \r\n            setTypingCounter(newTypingCounter)\r\n                \r\n            props.onTyping && props.onTyping(id, person)\r\n        }\r\n    }\r\n\r\n    function onClose() { setConnecting(true) }\r\n\r\n    // Render\r\n    \r\n    const { \r\n        development,\r\n        publicKey, projectID, \r\n        userName, \r\n        userPassword, userSecret, \r\n    } = props \r\n    \r\n    const wsStart = development ? 'ws://' : 'wss://'\r\n    const rootHost = development ? '127.0.0.1:8000' : 'api.chatengine.io'\r\n    const project = publicKey ? publicKey : projectID\r\n    const secret = userPassword ? userPassword : userSecret\r\n\r\n    return <WebSocket \r\n        url={`${wsStart}${rootHost}/person/?publicKey=${project}&username=${userName}&secret=${secret}`}\r\n        onOpen={() => onConnect(props)}\r\n        onClose={onClose.bind(this)}\r\n        onMessage={handleEvent.bind(this)}\r\n        reconnectIntervalInMilliSeconds={3000}\r\n    />\r\n}\r\n\r\nexport default Socket","import axios from 'axios'\r\nimport * as str from '../../actions'\r\nimport { getHeaders } from '../auth'\r\n\r\nexport function newChat(props, data, callback) {\r\n    axios.post(\r\n        `${str.getApiUrl(props)}/chats/`,\r\n        data, \r\n        { headers: getHeaders(props) }\r\n    )\r\n\r\n    .then((response) => {\r\n        callback && callback(response.data)\r\n    })\r\n    \r\n    .catch((error) => {\r\n        console.log('New Chat Error', error)\r\n    });\r\n}","import axios from 'axios'\r\nimport * as str from '../../actions'\r\nimport { getHeaders } from '../auth'\r\n\r\nexport function getLatestChats(props, count, callback) {\r\n    axios.get(\r\n        `${str.getApiUrl(props)}/chats/latest/${count}/`,\r\n        { headers: getHeaders(props) }\r\n    )\r\n\r\n    .then((response) => {\r\n        // Run hook in Axios on GET requests\r\n        props.onGetChats && props.onGetChats(response.data)\r\n\r\n        callback && callback(response.data)\r\n    })\r\n    \r\n    .catch((error) => {\r\n        console.log('Fetch Chats Error', error)\r\n    });\r\n}","import React, { useState, useRef, useEffect } from 'react'\r\n\r\nconst ChatLoader = props => {\r\n    function useOnScreen(ref) {\r\n        const [isIntersecting, setIntersecting] = useState(false)\r\n      \r\n        const observer = new IntersectionObserver(\r\n            ([entry]) => {\r\n                setIntersecting(entry.isIntersecting)\r\n                if (entry.isIntersecting) {\r\n                    props.onVisible()\r\n                }\r\n            }\r\n        )\r\n      \r\n        useEffect(() => {\r\n          observer.observe(ref.current)\r\n          // Remove the observer as soon as the component is unmounted\r\n          return () => { observer.disconnect() }\r\n        }, [])\r\n      \r\n        return isIntersecting\r\n    }\r\n  \r\n    const ref = useRef()\r\n    const isVisible = useOnScreen(ref)\r\n    \r\n    return <div ref={ref}>{isVisible && `Loading...`}</div>\r\n}\r\n\r\nexport default ChatLoader","import React, { useState, useContext } from 'react'\r\n\r\nimport { ChatEngineContext } from '../../../Context'\r\n\r\nimport { newChat } from 'react-chat-engine'\r\n\r\nimport { Button, TextInput } from 'react-chat-engine'\r\n\r\nconst NewChatForm = () => {\r\n  const { conn } = useContext(ChatEngineContext)\r\n  const [value, setValue] = useState('')\r\n  \r\n  function handleChange(event) {\r\n    setValue(event.target.value)\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault()\r\n\r\n    if (value.trim().length > 0) {\r\n      newChat(\r\n        conn, \r\n        { title: value },\r\n        () => {}\r\n      )\r\n    }\r\n\r\n    setValue('')\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit.bind(this)}>\r\n      <div style={{ height: '1px' }}>\r\n        <TextInput \r\n          label='New Chat'\r\n          value={value}\r\n          style={{ width: 'calc(100% - 48px)' }}\r\n          handleChange={(e) => handleChange(e)}\r\n        />\r\n      </div>\r\n\r\n      <div style={{ width: '100%', textAlign: 'right' }}>\r\n        <Button \r\n          icon='plus'\r\n          type=\"submit\" \r\n        />\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default NewChatForm","import React, { useContext } from 'react'\r\n\r\nimport { ChatEngineContext } from '../../Context'\r\n\r\nimport _ from 'lodash'\r\n\r\nimport { daySinceSent } from '../Utilities/dateToString'\r\n\r\nconst ChatCard = props => {\r\n    const { conn, activeChat, setActiveChat } = useContext(ChatEngineContext)\r\n\r\n    function readLastMessage(chat) {\r\n        let readLastMessage = true\r\n        chat.people.map(chat_person => {\r\n            if(conn.userName === chat_person.person.username) {\r\n                readLastMessage = chat.last_message.id === chat_person.last_read\r\n            }\r\n        })\r\n        return readLastMessage\r\n    }\r\n\r\n    const { chat } = props\r\n    const extraStyle = activeChat === chat.id ? styles.activeChat : {}\r\n    const otherPerson = chat.people.find(person => person.person.username !== conn.userName);\r\n    \r\n    if (props.renderChatCard) {\r\n        return <div key={`chat_${index}`}>{props.renderChatCard(chat, index)}</div>\r\n    }\r\n\r\n    let lastMessage = chat.last_message.text\r\n    if (!lastMessage) {\r\n        lastMessage = chat.last_message.attachments.length > 0 ?\r\n        `${chat.last_message.attachments.length} image${chat.last_message.attachments.length > 1 ? 's' : ''}` :\r\n        'Say hello!'\r\n    }\r\n\r\n    return (\r\n        <div \r\n            onClick={() => setActiveChat(chat.id)}\r\n            style={{ ...styles.chatContainer, ...extraStyle }}\r\n            className={`ce-chat-card ${activeChat === chat.id && 'ce-active-chat-card'}`}\r\n        >\r\n            <div style={ styles.titleText } className='ce-chat-title-text'>\r\n                { chat.is_direct_chat && otherPerson ? otherPerson.person.username : chat.title }\r\n                \r\n                {\r\n                    !readLastMessage(chat) &&\r\n                    <div \r\n                        className='ce-chat-unread-dot'\r\n                        style={{ \r\n                            float: 'right',\r\n                            width: '12px',\r\n                            height: '12px',\r\n                            borderRadius: '6px',\r\n                            backgroundColor: '#1890ff',\r\n                            display: 'inline-block'\r\n                        }} \r\n                    />\r\n                }\r\n                \r\n            </div>\r\n\r\n            <div style={{ width: '100%' }} className='ce-chat-subtitle'>\r\n                <div style={styles.messageText} className='ce-chat-subtitle-text ce-chat-subtitle-message'>\r\n                    { lastMessage }\r\n                </div>\r\n\r\n                <div \r\n                    className='ce-chat-subtitle-text ce-chat-subtitle-date'\r\n                    style={{ ...styles.messageText, ...{ textAlign: 'right', width: '25%' } }}\r\n                >\r\n                    { daySinceSent(chat.last_message.created) }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst styles={\r\n    chatContainer: { \r\n        padding: '16px', \r\n        paddingBottom: '12px',\r\n        cursor: 'pointer'\r\n    },\r\n    titleText: { \r\n        fontWeight: '500',\r\n         paddingBottom: '4px', \r\n         whiteSpace: 'nowrap', \r\n         overflow: 'hidden' \r\n    },\r\n    messageText: {\r\n        width: '75%',\r\n        color: 'rgba(153, 153, 153, 1)', \r\n        fontSize: '14px', \r\n        whiteSpace: 'nowrap', \r\n        overflow: 'hidden',\r\n        display: 'inline-block'\r\n    },\r\n    activeChat: {\r\n        backgroundColor: '#d9d9d9',\r\n        border: '4px solid white',\r\n        borderRadius: '12px'\r\n    },\r\n}\r\n\r\nexport default ChatCard;\r\n","export function timeSinceDate(date) {\r\n    if (!date) return ''\r\n\r\n    const day = date.substr(8,2)\r\n    const month = date.substr(5,2)\r\n    const year = date.substr(0,4)\r\n\r\n    const hour = date.substr(11,2)\r\n    const minute = date.substr(14,2)\r\n    const second = date.substr(17,2)\r\n\r\n    var sent = new Date(`${month} ${day} ${year}`)\r\n    sent.setHours(hour)\r\n    sent.setMinutes(minute)\r\n    sent.setSeconds(second)\r\n    sent = sent.toString()\r\n\r\n    const dayStr = sent.substr(0, 10)\r\n    const timeStr = sent.substr(15, 6)\r\n    return `${dayStr} at ${timeStr}`\r\n}\r\n\r\nexport function daySinceSent(date) {\r\n    if (!date) return ''\r\n    const day = date.substr(8,2)\r\n    const month = date.substr(5,2)\r\n    const year = date.substr(0,4)\r\n    const sent = new Date(`${month} ${day} ${year}`).toString()\r\n    return sent.substr(4, 6)\r\n}\r\n","import React, { useContext, useEffect, useRef, useState } from 'react'\r\n\r\nimport { ChatEngineContext } from '../../Context'\r\n\r\nimport { getLatestChats } from '../../../actions/chats'\r\n\r\nimport _ from 'lodash'\r\n\r\nimport ChatLoader from './ChatLoader'\r\n\r\nimport ChatForm from './NewChatForm'\r\nimport ChatCard from './ChatCard'\r\n\r\nlet count = 13\r\nconst interval = 13\r\n\r\nconst ChatList = props => {\r\n    const didMountRef = useRef(false)\r\n    const [hasMoreChats, setHasMoreChats] = useState(true)\r\n    const { chats, setChats, activeChat, setActiveChat } = useContext(ChatEngineContext)\r\n\r\n    function renderChats(chats) {\r\n        return chats.map((chat, index) => {\r\n            if (!chat) return <div key={`chat_${index}`} />\r\n\r\n            if (props.renderChatCard) {\r\n                return <div key={`chat_${index}`}>{props.renderChatCard(chat, index)}</div>\r\n                \r\n            } else {\r\n                return (\r\n                    <div \r\n                        key={`chat_${index}`}\r\n                        onClick={() => props.onChatClick && props.onChatClick()}\r\n                    >\r\n                        <ChatCard chat={chat} />\r\n                    </div>\r\n                )\r\n            }\r\n        })\r\n    }\r\n\r\n    function sortChats(chats) {\r\n        return chats.sort((a, b) => { \r\n            const aDate = a.last_message.created ? new Date(a.last_message.created) : new Date(a.created)\r\n            const bDate = b.last_message.created ? new Date(b.last_message.created) : new Date(b.created)\r\n            return new Date(bDate) - new Date(aDate); \r\n        })\r\n    }\r\n\r\n    function onGetChats(chats, count) {\r\n        const chatList = sortChats(chats)\r\n    \r\n        if (chatList.length > 0 && activeChat === null) {\r\n            setActiveChat(chatList[0].id)\r\n        }\r\n\r\n        if(count && count > chatList.length) {\r\n            setHasMoreChats(false)\r\n        }\r\n        \r\n        const newChats = {...chats}\r\n        setChats(_.mapKeys(newChats, 'id'))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!didMountRef.current) {\r\n            didMountRef.current = true\r\n            getLatestChats(props, interval, (chats) => onGetChats(chats))\r\n        }\r\n    })\r\n\r\n    function loadChats() {\r\n        count = count + interval\r\n        getLatestChats(props, count, (chats) => onGetChats(chats, count))\r\n    }\r\n\r\n    const chatList = sortChats(chats ? Object.values(chats) : [])\r\n\r\n    return (\r\n        <div style={styles.chatListContainer} className='ce-chat-list'>\r\n            <div style={styles.chatsContainer} className='ce-chats-container'>\r\n                { renderChats(chatList) } \r\n\r\n                { hasMoreChats && chatList.length > 0 && <ChatLoader onVisible={() => loadChats()} /> }\r\n\r\n                <div style={{ height: '64px' }} />\r\n\r\n                {\r\n                    props.renderNewChatForm ?\r\n                    props.renderNewChatForm(props) :\r\n                    <div style={styles.newChatContainer} className='ce-chat-form-container'>\r\n                        <ChatForm className='ce-chat-form' />\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst styles={\r\n    chatListContainer: { \r\n        height: '100%', \r\n        maxHeight: '100vh', \r\n        overflow: 'scroll', \r\n        overflowX: 'hidden',\r\n        borderRight: '1px solid #afafaf', \r\n        backgroundColor: 'white' \r\n    },\r\n    chatsContainer: { \r\n        width: '100%', \r\n        backgroundColor: 'white', \r\n        borderRadius: '0px 0px 24px 24px'\r\n    },\r\n    chatContainer: { \r\n        padding: '16px', \r\n        paddingBottom: '12px',\r\n        cursor: 'pointer'\r\n    },\r\n    titleText: { \r\n        fontWeight: '500',\r\n         paddingBottom: '4px', \r\n         whiteSpace: 'nowrap', \r\n         overflow: 'hidden' \r\n    },\r\n    messageText: {\r\n        width: '75%',\r\n        color: 'rgba(153, 153, 153, 1)', \r\n        fontSize: '14px', \r\n        whiteSpace: 'nowrap', \r\n        overflow: 'hidden',\r\n        display: 'inline-block'\r\n    },\r\n    activeChat: {\r\n        backgroundColor: '#d9d9d9',\r\n        border: '4px solid white',\r\n        borderRadius: '12px'\r\n    },\r\n    newChatContainer: { \r\n        position: 'absolute', \r\n        bottom: '0px', \r\n        padding: '12px',\r\n        width: 'calc(100% - 25px)',\r\n        backgroundColor: 'white'\r\n    }\r\n}\r\n\r\nexport default ChatList;\r\n","import React, { useState } from 'react'\r\n\r\nimport { MenuOutlined, CloseOutlined } from '@ant-design/icons'\r\n\r\nimport ChatList from '../../ChatList'\r\n\r\nconst ChatListDrawer = props => {\r\n    const [isOpen, setIsOpen] = useState(false)\r\n\r\n    return (\r\n        <div> \r\n            <MenuOutlined\r\n                onClick={() => setIsOpen(true)}\r\n                style={{ color: 'rgb(24, 144, 255)', outline: 'none' }} \r\n            />\r\n\r\n            { \r\n                isOpen &&\r\n                <div style={styles.drawerContainer}>\r\n                    <CloseOutlined\r\n                        style={styles.closeIcon}\r\n                        onClick={() => setIsOpen(false)}\r\n                    />\r\n\r\n                    <div style={styles.titleContainer}>\r\n                        <div style={styles.titleText}>\r\n                            My Chats\r\n                        </div>\r\n                    </div>\r\n\r\n                    <ChatList \r\n                        {...props} \r\n                        onChatClick={() => setIsOpen(false)}\r\n                    />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatListDrawer\r\n\r\nconst styles = {\r\n    drawerContainer: { \r\n        position: 'fixed',\r\n        zIndex: '1',\r\n        top: '0px',\r\n        left: '0px',\r\n        width: '100%',\r\n        height: '100%',\r\n        backgroundColor: 'white',\r\n        textAlign: 'left'\r\n    },\r\n    closeIcon: {\r\n        position: 'absolute',\r\n        left: '28px',\r\n        top: '32px'\r\n    },\r\n    titleContainer: {\r\n        width: '100%',\r\n        padding: '24px 0px',\r\n        textAlign: 'center',\r\n        color: 'rgb(24, 144, 255)',\r\n    },\r\n    titleText: {\r\n        fontSize: '24px',\r\n        fontWeight: '600',\r\n    }\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nimport { removePerson } from 'react-chat-engine'\r\n\r\nimport { Avatar, Button } from 'react-chat-engine'\r\n\r\nconst Person = props => {\r\n    const [selected, setSelected] = useState(false)\r\n\r\n    function onRemovePerson() {\r\n        removePerson(\r\n            props.conn,\r\n            props.chat.id,\r\n            props.person.username\r\n        )\r\n    }\r\n\r\n    function renderPersonText(person) {\r\n        if (person.first_name && person.first_name !== null) {\r\n            return `${person.first_name}${person.last_name ? ` ${person.last_name}` : ''}`\r\n        } else {\r\n            return person.username\r\n        }\r\n    }\r\n\r\n    const { person, chat, conn } = props\r\n\r\n    if (!person || !chat) { return <div /> }\r\n\r\n    const { admin } = chat\r\n\r\n    return (\r\n        <div \r\n            className='ce-person-container'\r\n            onMouseEnter={() => setSelected(true)}\r\n            onMouseLeave={() => setSelected(false)}\r\n        >\r\n            <div \r\n                className='ce-person-avatar'\r\n                style={{ padding: '2px', height: '0px' }}\r\n            >\r\n                <Avatar \r\n                    avatar={person.avatar} \r\n                    username={person.username} \r\n                    is_online={person.is_online}\r\n                />\r\n            </div>\r\n\r\n            <div\r\n                className='ce-person-text'\r\n                style={{ paddingLeft: '52px', height: '44px', position: 'relative', top: '10px', fontSize: '15px' }}\r\n            >\r\n                { renderPersonText(person) }\r\n            </div>\r\n\r\n            {\r\n                selected && (conn.userName === admin.username) && (person.username !== admin.username) &&\r\n                <div\r\n                    className='ce-delete-chat' \r\n                    style={{ float: 'right', height: '0px', position: 'relative', bottom: '44px'}}\r\n                >\r\n                    <Button \r\n                        theme='danger'\r\n                        icon='delete'\r\n                        onClick={() => onRemovePerson()}\r\n                    />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Person\r\n","import axios from 'axios'\r\nimport * as str from '..'\r\nimport { getHeaders } from '../auth'\r\n\r\nexport function removePerson(props, chatId, userName, callback) {\r\n    axios.put(\r\n        `${str.getApiUrl(props)}/chats/${chatId}/people/`,\r\n        { username: userName },\r\n        { headers: getHeaders(props) }\r\n    )\r\n\r\n    .then((response) => {\r\n        callback && callback(response.data)\r\n    })\r\n    \r\n    .catch((error) => {\r\n        console.log('Delete Person Error', error)\r\n    });\r\n}","import React, { useState } from 'react';\r\n\r\nimport { Avatar } from 'react-chat-engine'\r\n\r\n\r\nconst Option = props => {\r\n    const [focused, setFocused] = useState(false)\r\n\r\n    const { avatar, username } = props.person \r\n\r\n    return (\r\n        <div \r\n            onMouseEnter={() => setFocused(true)}\r\n            onMouseLeave={() => setFocused(false)}\r\n            onClick={() => props.onClick && props.onClick()}\r\n            style={{ ...styles.option, ...{ backgroundColor: focused ? '#f5f5f5' : 'white'} }}\r\n        >\r\n            <div>\r\n                <Avatar username={username} avatar={avatar} />\r\n            </div>\r\n\r\n            <div style={{ display: 'flex', padding: '12px 4px' }}>\r\n                {props.person.username}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Option\r\n\r\nconst styles = {\r\n  option: {\r\n    padding: '4px 16px',\r\n    cursor: 'pointer',\r\n    fontSize: '15px',\r\n    display: 'flex'\r\n  },\r\n}","import React, { useState } from 'react';\r\n\r\nimport { addPerson, getOtherPeople } from 'react-chat-engine'\r\n\r\nimport { AutoCompleteInput } from 'react-chat-engine'\r\n\r\nimport Option from './Option'\r\n\r\nconst PersonForm = props => {\r\n  const [state, setState] = useState({\r\n    value: '',\r\n    others: []\r\n  })\r\n\r\n  function handleChange(value) {\r\n    setState({ ...state, value });\r\n  }\r\n\r\n  function invitePerson(name) {\r\n    addPerson(\r\n      props.conn,\r\n      props.chat.id,\r\n      name,\r\n      () => { \r\n        setState({ ...state, value: '' }); \r\n        getOthers(); \r\n      }\r\n    )\r\n  }\r\n\r\n  function getOthers() {\r\n    getOtherPeople(\r\n      props.conn,\r\n      props.chat.id,\r\n      (id, others) => setState({ ...state, others }),\r\n      () => {},\r\n    )\r\n  }\r\n\r\n  function renderOption(option) {\r\n    return <Option person={option} onClick={() => invitePerson(option.username)} />\r\n  }\r\n\r\n  return (\r\n    <div style={{ marginBottom: '12px' }}>\r\n      <AutoCompleteInput \r\n        style={{ width: '100%' }}\r\n        label='Type a username'\r\n        value={state.value}\r\n        options={state.others}\r\n        onFocus={() => getOthers()}\r\n        handleChange={(value) => handleChange(value)} \r\n        renderOption={(option) => renderOption(option)}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PersonForm\r\n","import axios from 'axios'\r\nimport * as str from '../../actions'\r\nimport { getHeaders } from '../auth'\r\n\r\nexport function getOtherPeople(props, chatId, successCallback, errorCallback) {\r\n    axios.get(\r\n        `${str.getApiUrl(props)}/chats/${chatId}/others/`,\r\n        { headers: getHeaders(props) }\r\n    )\r\n\r\n    .then((response) => {\r\n        // Run hook in Axios on GET requests\r\n        props.onGetOtherPeople && props.onGetOtherPeople(chatId, response.data)\r\n\r\n        successCallback && successCallback(chatId, response.data)\r\n    })\r\n    \r\n    .catch((error) => {\r\n        console.log('Fetch Other People Error', error)\r\n\r\n        errorCallback && errorCallback()\r\n    });\r\n}","import React, { useState } from 'react';\r\n\r\nimport Person from './Person'\r\nimport PersonForm from './PersonForm'\r\n\r\nimport { LeftOutlined, DownOutlined } from '@ant-design/icons'\r\n\r\nconst PeopleSettings = props => {\r\n    const [state, setState] = useState({\r\n        collapsed: false,\r\n        hovered: false\r\n    })\r\n    const { chat } = props\r\n\r\n    if (chat.is_direct_chat) { return <div /> }\r\n\r\n    function renderChatPeople(people, chat) {\r\n        return people.map((chatPerson, index) => {\r\n            return (\r\n                <Person \r\n                    key={`person_${index}`} \r\n                    person={chatPerson.person}\r\n                    conn={props} \r\n                    chat={chat} \r\n                />\r\n            )\r\n        })\r\n    }    \r\n\r\n    return (\r\n        <div style={{ borderTop: '1px solid #f0f0f0' }}>\r\n            <div \r\n                onMouseEnter={() => setState({ ...state, hovered: true })}\r\n                onMouseLeave={() => setState({ ...state, hovered: false })}\r\n                onClick={() => setState({ ...state, collapsed: !state.collapsed })}\r\n                style={state.hovered ? { backgroundColor: '#f0f0f0', cursor: 'pointer' } : {}}\r\n                className='ce-section-title-container ce-person-title-container'\r\n            >\r\n                <div\r\n                    className='ce-section-title ce-people-title'\r\n                    style={{ fontSize: '17px', padding: '12px', fontWeight: '600' }}>\r\n                    People\r\n                </div>\r\n\r\n                {\r\n                    state.collapsed ?\r\n                    <LeftOutlined style={styles.collapseIcon} /> :\r\n                    <DownOutlined style={styles.collapseIcon} />\r\n                }\r\n            </div>\r\n\r\n            {\r\n                !state.collapsed &&\r\n                <div>\r\n                    <div style={{ height: '12px' }} />\r\n\r\n                    { renderChatPeople(chat.people, chat) }\r\n\r\n                    <div style={{ height: '12px' }} />\r\n\r\n                    {\r\n                        props && chat && props.userName === chat.admin.username &&\r\n                        <PersonForm conn={props} chat={chat} />\r\n                    }\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PeopleSettings\r\n\r\nconst styles = {\r\n    collapseIcon: {\r\n        float: 'right',\r\n        position: 'relative',\r\n        bottom: '30px',\r\n        right: '12px'\r\n    }\r\n}","import React from 'react'\r\n\r\nconst Thumbnail = props => {\r\n    const { attachment } = props \r\n\r\n    if (!attachment) { return <div /> }\r\n\r\n    return (\r\n        <div style={styles.container} className='ce-photo-thumbnail'>\r\n            \r\n            <div style={{ paddingTop: '100%' }} />\r\n            \r\n            <img\r\n                alt={attachment.id}\r\n                style={styles.image}\r\n                src={attachment.file}\r\n                className='ce-photo-img'\r\n                id={`image-${attachment.id}`}\r\n            />\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Thumbnail\r\n\r\nconst styles = {\r\n    container: { \r\n        position: 'relative', \r\n        width: 'calc(33% - 8px)', \r\n        border: '1px solid white', \r\n        display: 'inline-block',\r\n        cursor: 'pointer'\r\n    },\r\n    image: {\r\n        top: '0px', \r\n        width: '100%', \r\n        height: '100%',\r\n        position: 'absolute',\r\n        objectFit: 'cover'\r\n    }\r\n}","import React, { useState } from 'react'\r\n\r\nimport Thumbnail from './Thumbnail'\r\n\r\nimport { LeftOutlined, DownOutlined } from '@ant-design/icons'\r\n\r\n\r\nconst PhotosSettings = props => {\r\n    const [state, setState] = useState({\r\n        collapsed: true,\r\n        hovered: false\r\n    })\r\n    const { chat } = props\r\n\r\n    function renderPhotos(attachments) {\r\n        return attachments.map((attachment, index) => {\r\n            return <Thumbnail key={`person_${index}`} attachment={attachment} />\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div style={{ borderTop: '1px solid #f0f0f0' }} className='ce-photo-section'>\r\n            <div \r\n                onMouseEnter={() => setState({ ...state, hovered: true })}\r\n                onMouseLeave={() => setState({ ...state, hovered: false })}\r\n                onClick={() => setState({ ...state, collapsed: !state.collapsed })}\r\n                style={state.hovered ? { backgroundColor: '#f0f0f0', cursor: 'pointer' } : {}}\r\n                className='ce-section-title-container ce-photo-title-container'\r\n            >\r\n                <div \r\n                    className='ce-section-title ce-photo-title'\r\n                    style={{ fontSize: '17px', padding: '12px', fontWeight: '600' }}\r\n                >\r\n                    Photos\r\n                </div>\r\n\r\n                {\r\n                    state.collapsed ?\r\n                    <LeftOutlined style={styles.collapseIcon} /> :\r\n                    <DownOutlined style={styles.collapseIcon} />\r\n                }\r\n            </div>\r\n\r\n            {\r\n                !state.collapsed &&\r\n                <div className='ce-photo-feed'>\r\n                    <div style={{ height: '12px' }} />\r\n\r\n                    { renderPhotos(chat.attachments) }\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PhotosSettings\r\n\r\nconst styles = {\r\n    collapseIcon: {\r\n        float: 'right',\r\n        position: 'relative',\r\n        bottom: '30px',\r\n        right: '12px'\r\n    }\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nimport { Button, deleteChat } from 'react-chat-engine'\r\n\r\nimport { LeftOutlined, DownOutlined } from '@ant-design/icons'\r\n\r\nconst OptionsSettings = props => {\r\n    const [state, setState] = useState({\r\n        collapsed: true,\r\n        hovered: false\r\n    })\r\n    const { chat } = props\r\n\r\n    return (\r\n        <div style={{ borderTop: '1px solid #f0f0f0' }}>\r\n            <div \r\n                onMouseEnter={() => setState({ ...state, hovered: true })}\r\n                onMouseLeave={() => setState({ ...state, hovered: false })}\r\n                onClick={() => setState({ ...state, collapsed: !state.collapsed })}\r\n                style={state.hovered ? { backgroundColor: '#f0f0f0', cursor: 'pointer' } : {}}\r\n            >\r\n                <div style={{ fontSize: '17px', padding: '12px', fontWeight: '600' }}>\r\n                    Options\r\n                </div>\r\n\r\n                {\r\n                    state.collapsed ?\r\n                    <LeftOutlined style={styles.collapseIcon} /> :\r\n                    <DownOutlined style={styles.collapseIcon} />\r\n                }\r\n            </div>\r\n            \r\n            {\r\n                !state.collapsed &&\r\n                <div>\r\n                    <div style={{ height: '12px' }} />\r\n\r\n                    <Button \r\n                        value=\"Delete\" \r\n                        theme='danger'\r\n                        icon='delete'\r\n                        onClick={() => deleteChat(props, chat.id, (data) => {})}\r\n                        style={{ width: '100%', marginBottom: '12px' }}\r\n                    />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OptionsSettings\r\n\r\nconst styles = {\r\n    collapseIcon: {\r\n        float: 'right',\r\n        position: 'relative',\r\n        bottom: '30px',\r\n        right: '12px'\r\n    }\r\n}\r\n","import axios from 'axios'\r\nimport * as str from '../../actions'\r\nimport { getHeaders } from '../auth'\r\n\r\nexport function deleteChat(props, chatId, callback) {\r\n    axios.delete(\r\n        `${str.getApiUrl(props)}/chats/${chatId}/`,\r\n        { headers: getHeaders(props) }\r\n    )\r\n\r\n    .then((response) => {\r\n        callback && callback(response.data)\r\n    })\r\n    \r\n    .catch((error) => {\r\n        console.log('Delete Chat Error', error)\r\n    });\r\n}","import React, { useState, useEffect, useRef } from 'react';\r\n\r\nimport { editChat, TextInput } from 'react-chat-engine'\r\n\r\nconst NewMessageForm = props => {\r\n    const didMountRef = useRef(false)\r\n    const [state, setState] = useState({\r\n        activeChat: null,\r\n        value: ''\r\n    })\r\n  \r\n    function handleChange(event) {\r\n        setState({ ...state, value: event.target.value });\r\n    }\r\n  \r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        editChat(\r\n            props.conn, \r\n            props.chat.id,\r\n            {title: state.value},\r\n            (data) => {}\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!didMountRef.current) {\r\n            didMountRef.current = true\r\n\r\n        } else {\r\n            if(state.activeChat !== props.chat.id) {\r\n                setState({ \r\n                    ...state,\r\n                    value: props.chat.title,\r\n                    activeChat: props.chat.id\r\n                })\r\n            }\r\n        }\r\n    })\r\n\r\n    return (\r\n        <form onSubmit={(e) => handleSubmit(e)} className='ce-chat-title-form'>\r\n            <TextInput \r\n                label=\"Rename this Chat\" \r\n                value={state.value} \r\n                default={props.chat.title}\r\n                handleChange={(e) => handleChange(e)} \r\n                style={{ \r\n                    fontSize: '16px',\r\n                    fontWeight: '600',\r\n                    textAlign: 'center',\r\n                    border: '0px solid white',\r\n                    width: '100%',\r\n                }}\r\n            />\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default NewMessageForm","import axios from 'axios'\r\nimport * as str from '../../actions'\r\nimport { getHeaders } from '../auth'\r\n\r\nexport function editChat(props, chatId, data, callback) {\r\n    axios.patch(\r\n        `${str.getApiUrl(props)}/chats/${chatId}/`,\r\n        data, \r\n        { headers: getHeaders(props) }\r\n    )\r\n\r\n    .then((response) => {\r\n        callback && callback(response.data)\r\n    })\r\n    \r\n    .catch((error) => {\r\n        console.log('Edit Chat Error', error)\r\n    });\r\n}","import React, { useContext } from 'react'\r\n\r\nimport { ChatEngineContext } from '../../../Context'\r\n\r\nimport { Avatar } from 'react-chat-engine'\r\n\r\nimport TitleForm from './TitleForm'\r\n\r\nconst ChatSettingsTop = props => {\r\n    const { conn } = useContext(ChatEngineContext)\r\n    const { chat } = props\r\n    const topPeople = chat.people.slice(0, 3)\r\n    const otherPerson = getOtherPerson(chat.people)\r\n\r\n    function renderOnePerson(people) {\r\n        return (\r\n            <div style={{ width: '100%', paddingTop: '14px' }}>\r\n                <div style={{ float: 'left', position: 'relative', left: 'calc(50% - 22px)' }}>\r\n                    <Avatar \r\n                        show_online={false} \r\n                        username={people[0].person.username} \r\n                        avatar={people[0].person.avatar}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function renderTwoPeople(people) {\r\n        return (\r\n            <div style={{ width: '100%', paddingTop: '14px' }}>\r\n                <div style={{ float: 'left', position: 'relative', left: 'calc(50% - 22px - 15px)' }}>\r\n                    <Avatar \r\n                        show_online={false} \r\n                        username={people[0].person.username} \r\n                        avatar={people[0].person.avatar}\r\n                    />\r\n                </div>\r\n\r\n                <div style={{ float: 'left', position: 'relative', left: 'calc(50% - 44px - 22px + 15px)' }}>\r\n                    <Avatar \r\n                        show_online={false} \r\n                        username={people[1].person.username} \r\n                        avatar={people[1].person.avatar}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function renderThreePeople(people) {\r\n        return (\r\n            <div style={{ width: '100%', paddingTop: '14px' }}>\r\n                <div style={{ float: 'left', position: 'relative', left: 'calc(50% - 22px - 24px)' }}>\r\n                    <Avatar \r\n                        show_online={false} \r\n                        username={people[0].person.username}\r\n                        avatar={people[0].person.avatar}\r\n                    />\r\n                </div>\r\n\r\n                <div style={{ float: 'left', position: 'relative', left: 'calc(50% - 24px - 44px)' }}>\r\n                    <Avatar \r\n                        show_online={false} \r\n                        username={people[1].person.username} \r\n                        avatar={people[1].person.avatar}\r\n                    />\r\n                </div>\r\n\r\n                <div style={{ float: 'left', position: 'relative', left: 'calc(50% - 22px - 44px - 44px + 24px)' }}>\r\n                    <Avatar \r\n                        show_online={false} \r\n                        username={people[2].person.username}\r\n                        avatar={people[2].person.avatar}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function getOtherPerson(people) {\r\n        return people.find(person => person.person.username !== conn.userName);\r\n    }\r\n    \r\n    return (\r\n        <div className='ce-chat-settings-container'>\r\n            <div className='ce-chat-avatars-row'>\r\n                { topPeople.length === 1 && renderOnePerson(topPeople) }\r\n                \r\n                { chat.is_direct_chat && otherPerson && renderOnePerson([otherPerson]) }\r\n\r\n                { !chat.is_direct_chat && otherPerson && topPeople.length === 2 && renderTwoPeople(topPeople) }\r\n\r\n                { !chat.is_direct_chat && otherPerson && topPeople.length === 3 && renderThreePeople(topPeople) }\r\n            </div>\r\n\r\n            {\r\n                chat.is_direct_chat && otherPerson ?\r\n                <div style={{ \r\n                    paddingTop: '55px',\r\n                    paddingBottom: '7px',\r\n                    fontSize: '16px',\r\n                    fontWeight: '600',\r\n                    textAlign: 'center',\r\n                    border: '0px solid white',\r\n                    width: '100%',\r\n                }}>\r\n                    { otherPerson.person.username }\r\n                </div> :\r\n                <TitleForm chat={chat} conn={conn} />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatSettingsTop\r\n","import React, { useContext } from 'react'\r\n\r\nimport { ChatEngineContext } from '../../Context'\r\n\r\nimport PeopleSettings from './PeopleSettings'\r\nimport PhotosSettings from './PhotosSettings'\r\nimport OptionsSettings from './OptionsSettings'\r\nimport ChatSettingsTop from './ChatSettingsTop'\r\n\r\nconst ChatSettings = props => {\r\n    const { chats, activeChat } = useContext(ChatEngineContext)  \r\n    const chat = chats && chats[activeChat] \r\n    \r\n    if (!chat) return <div style={styles.filler} />\r\n    \r\n    return (\r\n        <div style={styles.settingsContainer} className='ce-settings'>\r\n            <div style={{ width: '90%', paddingLeft: '5%' }} className='ce-settings-container'>\r\n                {\r\n                    props.renderChatSettingsTop ?\r\n                    props.renderChatSettingsTop(props, chat) :\r\n                    <ChatSettingsTop {...props} chat={chat} />\r\n                }\r\n\r\n                {\r\n                    props.renderPeopleSettings ?\r\n                    props.renderPeopleSettings(props, chat) :\r\n                    <PeopleSettings {...props} chat={chat} />\r\n                }\r\n\r\n                {\r\n                    props.renderPhotosSettings ?\r\n                    props.renderPhotosSettings(chat) :\r\n                    <PhotosSettings {...props} chat={chat} />\r\n                }\r\n\r\n                {\r\n                    props && chat && props.userName === chat.admin.username  &&\r\n                    <div>\r\n                        {\r\n                            props.renderOptionsSettings ?\r\n                            props.renderOptionsSettings(props, chat) :\r\n                            <OptionsSettings {...props} chat={chat} />\r\n                        }\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatSettings\r\n\r\nconst styles = {\r\n    settingsContainer: { \r\n        height: '100%',\r\n        overflow: 'scroll',\r\n        overflowX: 'hidden',\r\n        borderLeft: '1px solid #afafaf',\r\n        backgroundColor: 'white'\r\n    },\r\n    filler: { \r\n        display: 'flex',\r\n        width: '90%',\r\n        paddingLeft: '5%',\r\n        borderLeft: '1px solid #afafaf'\r\n    }\r\n}","import React, { useState } from 'react'\r\n\r\nimport { SettingOutlined, CloseOutlined } from '@ant-design/icons'\r\n\r\nimport ChatSettings from '../../ChatSettings'\r\n\r\nconst ChatSettingsDrawer = props => {\r\n    const [isOpen, setIsOpen] = useState(false)\r\n\r\n    return (\r\n        <div> \r\n            <SettingOutlined\r\n                onClick={() => setIsOpen(true)}\r\n                style={{ color: 'rgb(24, 144, 255)', outline: 'none' }} \r\n            />\r\n\r\n            { \r\n                isOpen &&\r\n                <div style={styles.drawerContainer}>\r\n                    <CloseOutlined\r\n                        style={styles.closeIcon}\r\n                        onClick={() => setIsOpen(false)}\r\n                    />\r\n\r\n                    <div style={styles.titleContainer}>\r\n                        <div style={styles.titleText}>\r\n                            Chat Settings\r\n                        </div>\r\n                    </div>\r\n\r\n                    <ChatSettings {...props} />\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatSettingsDrawer\r\n\r\nconst styles = {\r\n    drawerContainer: { \r\n        position: 'fixed',\r\n        zIndex: '1',\r\n        top: '0px',\r\n        left: '0px',\r\n        width: '100%',\r\n        height: '100%',\r\n        backgroundColor: 'white',\r\n        textAlign: 'left'\r\n    },\r\n    closeIcon: {\r\n        position: 'absolute',\r\n        left: '28px',\r\n        top: '32px'\r\n    },\r\n    titleContainer: {\r\n        width: '100%',\r\n        padding: '24px 0px',\r\n        textAlign: 'center',\r\n        color: 'rgb(24, 144, 255)',\r\n    },\r\n    titleText: {\r\n        fontSize: '24px',\r\n        fontWeight: '600',\r\n    },\r\n}\r\n","import React, { useContext } from 'react'\r\n\r\nimport { ChatEngineContext } from '../../../Context'\r\n\r\nimport { timeSinceDate } from '../../Utilities/dateToString'\r\n\r\nimport ChatListDrawer from './ChatListDrawer'\r\nimport ChatSettingsDrawer from './ChatSettingsDrawer'\r\n\r\nimport { Row, Col } from 'react-grid-system'\r\n\r\nimport { setConfiguration } from 'react-grid-system';\r\n \r\nsetConfiguration({ maxScreenClass: 'xl', gutterWidth: 0 });\r\n\r\nconst ChatHeader = props => {\r\n    const { conn, chats, activeChat } = useContext(ChatEngineContext)\r\n\r\n    if (!chats || !activeChat || !chats[activeChat]) { return <div /> }\r\n\r\n    const chat = chats[activeChat]\r\n    const otherPerson = chat.people.find(person => person.person.username !== conn.userName);\r\n\r\n    return (\r\n        <Row \r\n            className='ce-chat-title'\r\n            style={styles.titleSection}\r\n        >\r\n            <Col \r\n                xs={2} \r\n                sm={0} \r\n                style={{ ...styles.mobileOptiom, ...{ left: '6px' } }}\r\n                className='ce-chat-list-mobile-option'\r\n            >\r\n                <ChatListDrawer />\r\n            </Col>\r\n\r\n            <Col \r\n                xs={8}\r\n                sm={12}\r\n                style={styles.titleContainer} \r\n                className='ce-chat-title-container'\r\n            >\r\n                <div style={styles.titleText} className='ce-chat-title-text'>\r\n                    { chat.is_direct_chat && otherPerson ? otherPerson.person.username : chat.title }\r\n                </div>\r\n                \r\n                <div style={styles.subtitleText} className='ce-chat-subtitle-text'>\r\n                    {\r\n                        chat.last_message.created && chat.last_message.created.length > 0 ?\r\n                        `Active ${timeSinceDate(chat.last_message.created)}` :\r\n                        'Say hello!'\r\n                    }\r\n                </div>\r\n            </Col>\r\n\r\n            <Col \r\n                xs={2} \r\n                sm={0} \r\n                style={{ ...styles.mobileOptiom, ...{ right: '6px' } }}\r\n                className='ce-chat-settings-mobile-option'\r\n            >\r\n                <ChatSettingsDrawer />\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default ChatHeader\r\n\r\nconst styles = {\r\n    titleSection: { \r\n        position: 'absolute',\r\n        top: '0px',\r\n        width: '100%',\r\n        zIndex: '1',\r\n        backgroundColor: 'rgb(256, 256, 256, 0.92)'\r\n    },\r\n    mobileOptiom: {\r\n        width: '100%',\r\n        top: '32px',\r\n        textAlign: 'center',\r\n        color: 'rgb(24, 144, 255)',\r\n        overflow: 'hidden'\r\n    },\r\n    titleContainer: {\r\n        width: '100%',\r\n        padding: '18px 0px',\r\n        textAlign: 'center',\r\n        color: 'rgb(24, 144, 255)',\r\n    },\r\n    titleText: {\r\n        fontSize: '24px',\r\n        fontWeight: '600',\r\n    },\r\n    subtitleText: {\r\n        fontSize: '12px',\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nconst AuthFail = () => {\r\n    return (\r\n        <div style={{ height: '100%', textAlign: 'center' }}>\r\n            \r\n            <div style={{ width: '100%' }}>\r\n                <img\r\n                    style={{ width: '40%', paddingTop: '25vh' }}\r\n                    src='https://chat-engine-assets.s3.amazonaws.com/denied.svg'\r\n                    alt='welcome-to-chat-engine'\r\n                />\r\n            </div>\r\n\r\n            <div style={{ fontSize: '18px', paddingTop: '24px', width: '75%', paddingLeft: '12.5%' }}>\r\n                Your credentials are incorrect. Make sure your Public Key, Username, and Password are correct at <a href='https://chatengine.io'>chatengine.io</a>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AuthFail","import React from 'react'\r\n\r\nimport { SyncOutlined } from '@ant-design/icons'\r\n\r\nconst Loading  = () => {\r\n    return (\r\n        <div \r\n            style={{ \r\n                zIndex: '1',\r\n                bottom: '66px', \r\n                left: 'calc(50% - 78px)',\r\n                position: 'absolute', \r\n                fontSize: '15px',\r\n                padding: '10px 22px', \r\n                color: 'white',\r\n                backgroundColor: '#fa8c16',\r\n                borderRadius: '1.3em',\r\n            }}\r\n            id='ce-connecting-popup'\r\n        >\r\n            <SyncOutlined spin />\r\n            {' '}\r\n            Connecting\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading\r\n","import React from 'react'\r\n\r\nconst Welcome = () => {\r\n    return (\r\n        <div style={{ height: '100%', textAlign: 'center' }}>\r\n\r\n            <div style={{ width: '100%' }}>                    \r\n                <img\r\n                    style={{ width: '60%', paddingTop: '33vh' }}\r\n                    src='https://chat-engine-assets.s3.amazonaws.com/welcome.svg'\r\n                    alt='welcome-to-chat-engine'\r\n                />\r\n            </div>\r\n\r\n            <div style={{ fontSize: '18px', paddingTop: '24px', width: '75%', paddingLeft: '12.5%' }}>\r\n                Fill out the \"New Chat\" form to get started.\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Welcome\r\n","import React from 'react'\r\n\r\nconst months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\r\nconst suffix = [\r\n  'st', 'nd', 'rd', 'th', 'th',\r\n  'th', 'th', 'th', 'th', 'th',\r\n  'th', 'th', 'th', 'th', 'th',\r\n  'th', 'th', 'th', 'th', 'th',\r\n  'st', 'nd', 'rd', 'th', 'th',\r\n  'th', 'th', 'th', 'th', 'th',\r\n  'st'\r\n]\r\n\r\nconst DatePartition = props => {\r\n    function getDate(date) {\r\n        return date ? date.substr(0, 10) : null\r\n    }\r\n\r\n    function formatDate(date_time) {\r\n        if (!date_time) return ''\r\n        \r\n        const year = date_time.substr(0, 4)\r\n        const month = months[parseInt(date_time.substr(5, 2)) - 1]\r\n        const day = date_time.substr(8, 2)\r\n        const dayDuffix = suffix[parseInt(date_time.substr(8, 2)) - 1]\r\n\r\n        var time = date_time.substr(11, 5)\r\n        var timeSuffix = ''\r\n\r\n        if(parseInt(time.substr(0, 2)) >= 12){\r\n            if(parseInt(time.substr(0, 2)) > 12){\r\n            time = String(parseInt(time.substr(0, 2)) - 12) + ':' + time.substr(3, 2)\r\n            }\r\n            timeSuffix = 'PM'\r\n\r\n        } else {\r\n            timeSuffix = 'AM'\r\n        }\r\n\r\n        return time + timeSuffix + ', ' + month + ' ' + day + dayDuffix + ', ' + year\r\n    }\r\n\r\n    const { lastCreated, created } = props\r\n\r\n    const lastDate = getDate(lastCreated)\r\n    const thisDate = getDate(created)\r\n\r\n    if (lastCreated && lastDate === thisDate ) {\r\n        return <div />\r\n    }\r\n\r\n    return (\r\n        <div style={styles.dateText} className='ce-message-date-text'>\r\n            { formatDate(created) }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DatePartition\r\n\r\nconst styles = {\r\n    dateText: { \r\n        width: '100%', \r\n        textAlign: 'center',\r\n        paddingTop: '4px',\r\n        paddingBottom: '10px',\r\n        fontSize: '15px',\r\n        color: 'rgba(0, 0, 0, .40)'\r\n    }\r\n}","import React from 'react'\r\n\r\nimport { LoadingOutlined } from '@ant-design/icons'\r\n\r\nconst Thumbnail = props => {\r\n    const { attachment } = props\r\n\r\n    if (!attachment) {\r\n        return (\r\n            <div style={styles.loadingContainer}>\r\n                <LoadingOutlined  style={{ color: 'white', padding: '4px', fontSize: '28px' }} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <img \r\n            style={styles.thumbnail}\r\n            src={attachment.file}\r\n            alt={'thumb-nail'}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Thumbnail\r\n\r\nconst styles = {\r\n    loadingContainer: {\r\n        width: '100%', \r\n        cursor: 'pointer',\r\n        textAlign: 'right', \r\n        display: 'inline-block', \r\n        objectFit: 'cover',\r\n        borderRadius: '0.3em',\r\n        marginRight: '2px',\r\n\r\n        height: '30vw', \r\n        width: '30vw', \r\n        maxHeight: '200px',\r\n        maxWidth: '200px',\r\n        minHeight: '100px',\r\n        minWidth: '100px',\r\n        backgroundColor: '#d9d9d9',\r\n    },\r\n    thumbnail: { \r\n        width: '100%', \r\n        cursor: 'pointer',\r\n        textAlign: 'right', \r\n        display: 'inline', \r\n        objectFit: 'cover',\r\n        borderRadius: '0.3em',\r\n        paddingRight: '2px',\r\n\r\n        height: '30vw', \r\n        width: '30vw', \r\n        maxHeight: '200px',\r\n        maxWidth: '200px',\r\n        minHeight: '100px',\r\n        minWidth: '100px',\r\n    }\r\n}","\r\n\r\nconst colors = [\r\n    '#D64045',\r\n    '#5B3000',\r\n    '#00CC99',\r\n    '#467599',\r\n    '#1D3354',\r\n    '#8F250C',\r\n    '#6153CC',\r\n    '#961D4E',\r\n    '#A29F15',\r\n    '#0CAADC',\r\n    '#FF5154',\r\n    '#FA7921',\r\n    '#688E26',\r\n    '#550527',\r\n    '#A10702',\r\n    '#FF1053',\r\n    '#6C6EA0',\r\n    '#100B00',\r\n]\r\n\r\nfunction stringToNumber(str){\r\n    let sum = 0\r\n    for (var i = 0; i < str.length; i++) {\r\n        sum = sum + (str.charCodeAt(i) * i) - 97\r\n    }\r\n    return sum\r\n}\r\n\r\nexport function stringToColor(str) {\r\n    if (!str) {\r\n        return 'black'\r\n    } else {\r\n        return colors[stringToNumber(str) % colors.length]\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nimport { stringToColor } from '../../Utilities/colorMapping' \r\n\r\n\r\nexport default class Dot extends Component {\r\n    state = { avatar: '' }\r\n\r\n    updateImg() {\r\n        let { avatar } = this.props\r\n        avatar = avatar && avatar !== null ? avatar : ''\r\n        \r\n        if (avatar.split('?')[0] !== this.state.avatar.split('?')[0]) {\r\n            this.setState({ avatar })\r\n        }\r\n    }\r\n\r\n    componentDidMount() { this.updateImg() }\r\n\r\n    componentDidUpdate() { this.updateImg() }\r\n\r\n    render() {\r\n        const { username } = this.props\r\n        const color = stringToColor(username)\r\n        const customStyle = this.props.style ? this.props.style : {}\r\n        \r\n        return (\r\n            <div\r\n                className='ce-avatar-dot'\r\n                style={{\r\n                    ...styles.dot,\r\n                    ...customStyle,\r\n                    ...{\r\n                        backgroundColor: this.state.avatar ? 'white' : color,\r\n                        backgroundImage: this.state.avatar && `url(${this.state.avatar})`,\r\n                        backgroundRepeat: 'no-repeat',\r\n                        backgroundPosition: 'center',\r\n                        backgroundSize: '14px'\r\n                    }\r\n                }}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    dot: {\r\n        width: '13px',\r\n        height: '13px',\r\n        borderRadius: '13px',\r\n        textAlign: 'center',\r\n    }\r\n}","import React from 'react'\r\n\r\nimport Thumbnail from './Thumbnail'\r\n\r\nimport Dot from '../../components/Avatar/Dot'\r\n\r\nimport { Row, Col, setConfiguration } from 'react-grid-system'\r\n\r\nsetConfiguration({ maxScreenClass: 'xl' })\r\n\r\nconst Message = props => {\r\n    function renderReads() {\r\n        const { chat, message } = props\r\n\r\n        if(!chat) { return <div /> }\r\n\r\n        return chat.people.map((chatPerson, index) => {\r\n            if (message.id === chatPerson.last_read) {\r\n                return (\r\n                    <Dot \r\n                        key={`read_${index}`}\r\n                        avatar={chatPerson.person.avatar}\r\n                        username={chatPerson.person.username}\r\n                        style={{ float: 'right', marginLeft: '4px' }} \r\n                    />\r\n                )\r\n            }\r\n            return <div key={`read_${index}`} />\r\n        })\r\n    }\r\n\r\n    function renderAttachments() {\r\n        const { message } = props\r\n        const attachments = message && message.attachments ? message.attachments : []\r\n        return attachments.map((attachment, index) => {\r\n            return <Thumbnail attachment={attachment} key={`attachment_${index}`} />\r\n        })\r\n    }\r\n\r\n    \r\n    const { lastMessage, message, nextMessage } = props\r\n\r\n    if (!message) { return <div /> }\r\n\r\n    const attachments = message && message.attachments && message.attachments\r\n\r\n    const topRightRadius = !lastMessage || lastMessage.sender_username !== message.sender_username ? '1.3em' : '0.3em'\r\n    const bottomRightRadius = !nextMessage || nextMessage.sender_username !== message.sender_username ? '1.3em' : '0.3em'\r\n\r\n    const borderRadius = `1.3em ${topRightRadius} ${bottomRightRadius} 1.3em`\r\n    const paddingBottom = !nextMessage || nextMessage.sender_username !== message.sender_username ? '12px' : '2px'\r\n\r\n    return (\r\n        <div \r\n            className='ce-message-row ce-my-message'\r\n            style={{ width: '100%', textAlign: 'right', paddingBottom }}\r\n        >\r\n            <div \r\n                style={{ display: 'auto' }} \r\n                className='ce-my-message-attachments-container'\r\n            >\r\n                { renderAttachments() }\r\n            </div>\r\n\r\n            <Row\r\n                style={{ paddingRight: '2px' }} \r\n                className='ce-message-bubble-row ce-my-message-bubble-row'\r\n            >\r\n                <Col xs={1} sm={2} md={3} />\r\n\r\n                <Col xs={11} sm={10} md={9}>\r\n                    {\r\n                        !attachments || message.text && \r\n                        <div\r\n                            className='ce-message-bubble ce-my-message-bubble'\r\n                            style={{ ...styles.myMessage, ...{ borderRadius } }}\r\n                        >\r\n                            { message.text }\r\n                        </div>\r\n                    }\r\n                </Col>\r\n\r\n                <Col xs={1} sm={2} md={3} />\r\n\r\n                <Col xs={12} className='ce-reads-row ce-my-reads-row'>\r\n                    { renderReads() }\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n\r\nconst styles = {\r\n    myMessage: {\r\n        color: 'white', \r\n        cursor: 'pointer',\r\n        float: 'right', textAlign: 'left', // Stay right but render text\r\n        padding: '12px',\r\n        fontSize: '15px',\r\n        whiteSpace: 'pre-line',\r\n        backgroundColor: 'rgb(24, 144, 255)', \r\n    }\r\n}","import React from 'react'\r\n\r\nimport Thumbnail from './Thumbnail'\r\n\r\nimport { Avatar, Dot } from 'react-chat-engine'\r\n\r\nimport { Row, Col, setConfiguration } from 'react-grid-system'\r\n\r\nsetConfiguration({ maxScreenClass: 'xl' })\r\n\r\n\r\nconst TheirMessage = props => {\r\n    function renderReads() {\r\n        const { chat, message } = props\r\n\r\n        if(!chat) { return <div /> }\r\n\r\n        return chat.people.map((person, index) => {\r\n            if (message.id === person.last_read) {\r\n                return (\r\n                    <Dot \r\n                        key={`read_${index}`}\r\n                        avatar={person.person.avatar}\r\n                        username={person.person.username}\r\n                        style={{ float: 'left', marginLeft: '4px' }}\r\n                    />\r\n                )\r\n            }\r\n            return <div key={`read_${index}`} />\r\n        })\r\n    }\r\n\r\n    function renderAttachments() {\r\n        const { message } = props\r\n        const attachments = message && message.attachments ? props.message.attachments : []\r\n        return attachments.map((attachment, index) => {\r\n            return <Thumbnail attachment={attachment} key={`attachment_${index}`} />\r\n        })\r\n    }\r\n\r\n    const { lastMessage, message, nextMessage } = props\r\n\r\n    if (!message) { return <div /> }\r\n\r\n    const attachments = message && message.attachments && message.attachments\r\n\r\n    const topLeftRadius = !lastMessage || lastMessage.sender_username !== message.sender_username ? '1.3em' : '0.3em'\r\n    const bottomLeftRadius = !nextMessage || nextMessage.sender_username !== message.sender_username ? '1.3em' : '0.3em'\r\n\r\n    const borderRadius = `${topLeftRadius} 1.3em 1.3em ${bottomLeftRadius}`\r\n    const paddingBottom = !nextMessage || nextMessage.sender_username !== message.sender_username ? '12px' : '2px'\r\n\r\n    return (\r\n        <div \r\n            style={{ width: '100%', paddingBottom }}\r\n            className='ce-message-row ce-their-message'\r\n        >\r\n            {\r\n                (!lastMessage || lastMessage.sender_username !== message.sender_username) &&\r\n                <div style={styles.nameText} className='ce-their-message-sender'>\r\n                    { message.sender_username }\r\n                </div>\r\n            }\r\n        \r\n            <Row style={{ paddingLeft: '2px' }} className='ce-their-message-row'>\r\n                <Col xs={11} sm={10} md={9}>\r\n                    <div style={{ height: '0px' }} className='ce-their-message-avatar'>\r\n                        {\r\n                            (!nextMessage || nextMessage.sender_username !== message.sender_username) &&\r\n                            <Avatar\r\n                                show_online={false}\r\n                                username={message.sender_username}\r\n                                avatar={message.sender && message.sender.avatar}\r\n                            />\r\n                        }\r\n\r\n                    </div>\r\n\r\n                    <div \r\n                        style={{ display: 'auto', paddingLeft: '50px' }}\r\n                        className='ce-their-message-attachments-container'\r\n                    >\r\n                        { renderAttachments() }\r\n                    </div>\r\n\r\n                    {\r\n                        !attachments || message.text &&\r\n                        <div style={{ paddingLeft: '48px' }}>\r\n                            <div\r\n                                className='ce-message-bubble ce-their-message-bubble'\r\n                                style={{ ...styles.theirMessage, ...{ borderRadius } }}\r\n                            >\r\n                                { message.text }\r\n                            </div>\r\n                        </div>  \r\n                    }\r\n                </Col>\r\n\r\n                {/* Col is 9 to not slipp into RHS */}\r\n                <Col \r\n                    xs={9} \r\n                    style={{ marginLeft: '48px' }} \r\n                    className='ce-reads-row ce-their-reads-row'\r\n                >\r\n                    { renderReads() }\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TheirMessage\r\n\r\nconst styles = {\r\n    theirMessage: {\r\n        cusor: 'auto',\r\n        color: 'black', \r\n        float: 'left',\r\n        padding: '12px',\r\n        fontSize: '15px',\r\n        whiteSpace: 'pre-line',\r\n        backgroundColor: '#f1f0f0', \r\n    },\r\n    nameText: { \r\n        paddingLeft: '62px', \r\n        paddingBottom: '2px', \r\n        color: 'rgba(0, 0, 0, .40)', \r\n        fontSize: '15px' \r\n    }\r\n}","import React from 'react'\r\n\r\nimport Thumbnail from './Thumbnail'\r\n\r\nimport Dot from '../../components/Avatar/Dot'\r\n\r\nimport { Row, Col, setConfiguration } from 'react-grid-system'\r\n\r\nsetConfiguration({ maxScreenClass: 'xl' })\r\n\r\nconst SendingMessage = props => {\r\n    function renderReads() {\r\n        const { chat, message } = props\r\n\r\n        if(!chat) { return <div /> }\r\n\r\n        return chat.people.map((chatPerson, index) => {\r\n            if (message.id === chatPerson.last_read) {\r\n                return (\r\n                    <Dot \r\n                        key={`read_${index}`}\r\n                        avatar={chatPerson.person.avatar}\r\n                        username={chatPerson.person.username}\r\n                        style={{ float: 'right', marginLeft: '4px' }} \r\n                    />\r\n                )\r\n            }\r\n            return <div key={`read_${index}`} />\r\n        })\r\n    }\r\n\r\n    function renderAttachments(attachments) {\r\n        return attachments.map((a, index) => {\r\n            return <Thumbnail key={`sending-file-${index}`} />\r\n        })\r\n    }\r\n\r\n    const { lastMessage, message, nextMessage } = props\r\n\r\n    if (!message) { return <div /> }\r\n\r\n    const attachments = message && message.attachments ? message.attachments : []\r\n\r\n    const topRightRadius = !lastMessage || lastMessage.sender_username !== message.sender_username ? '1.3em' : '0.3em'\r\n    const bottomRightRadius = !nextMessage || nextMessage.sender_username !== message.sender_username ? '1.3em' : '0.3em'\r\n\r\n    const borderRadius = `1.3em ${topRightRadius} ${bottomRightRadius} 1.3em`\r\n    const paddingBottom = !nextMessage || nextMessage.sender_username !== message.sender_username ? '12px' : '2px'\r\n\r\n    return (\r\n        <div \r\n            className='ce-message-row ce-my-message ce-my-message-sending'\r\n            style={{ width: '100%', textAlign: 'right', paddingBottom }}\r\n        >\r\n            <div \r\n                style={{ display: 'auto' }} \r\n                className='ce-my-message-attachments-container'\r\n            >\r\n                { renderAttachments(attachments) }\r\n            </div>\r\n\r\n            <Row\r\n                style={{ paddingRight: '2px' }} \r\n                className='ce-message-bubble-row ce-my-message-bubble-row ce-my-message-sending-row'\r\n            >\r\n                <Col xs={1} sm={2} md={3} />\r\n\r\n                <Col xs={11} sm={10} md={9}>\r\n                    {\r\n                        message.text &&\r\n                        <div\r\n                            className='ce-message-bubble ce-my-message-bubble'\r\n                            style={{ ...styles.myMessage, ...{ borderRadius } }}\r\n                        >\r\n                            { message.text }\r\n                        </div>\r\n                    }\r\n                </Col>\r\n                \r\n                <Col xs={1} sm={2} md={3} />\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SendingMessage\r\n\r\nconst styles = {\r\n    myMessage: {\r\n        color: 'white', \r\n        cursor: 'pointer',\r\n        float: 'right', textAlign: 'left', // Stay right but render text\r\n        padding: '12px',\r\n        fontSize: '15px',\r\n        whiteSpace: 'pre-line',\r\n        backgroundColor: '#40a9ff', \r\n    }\r\n}","import React, { useContext } from 'react'\r\n\r\nimport { ChatEngineContext } from '../../../Context'\r\n\r\nimport DatePartition from './DatePartition'\r\nimport MyMessage from './MyMessage'\r\nimport TheirMessage from './TheirMessage'\r\nimport SendingMessage from './SendingMessage'\r\n\r\nconst Message = props => {\r\n    const { lastMessage, message, nextMessage, sending, chat } = props\r\n\r\n    const { conn } = useContext(ChatEngineContext)\r\n\r\n    if (!message || !chat) { return <div /> }\r\n\r\n    return (\r\n        <div className='ce-message-and-date'>\r\n            {\r\n                !sending &&\r\n                <DatePartition \r\n                    lastCreated={lastMessage ? lastMessage.created : null} \r\n                    created={message.created} \r\n                />\r\n            }\r\n\r\n            {\r\n                sending ? \r\n                <SendingMessage \r\n                    chat={chat} \r\n                    conn={conn} \r\n                    lastMessage={lastMessage} \r\n                    message={message} \r\n                    nextMessage={nextMessage} \r\n                /> :\r\n                <div>\r\n                    {\r\n                        message.sender_username === conn.userName || message.sender_username === conn.senderUsername ?\r\n                        <MyMessage \r\n                            chat={chat}\r\n                            conn={conn}\r\n                            lastMessage={lastMessage}\r\n                            message={message}\r\n                            nextMessage={nextMessage}\r\n                        /> :\r\n                        <TheirMessage \r\n                            chat={chat}\r\n                            conn={conn}\r\n                            lastMessage={lastMessage}\r\n                            message={message}\r\n                            nextMessage={nextMessage}\r\n                        />\r\n                    }\r\n                </div>\r\n            }\r\n        </div>\r\n    ) \r\n}\r\n\r\nexport default Message","import React, { useState } from 'react'\r\n\r\nimport { CloseCircleTwoTone } from '@ant-design/icons'\r\n\r\nconst Thumbnail = props => {\r\n    const [hovered, setHovered] = useState(false)\r\n\r\n    return (\r\n        <div \r\n            style={{ padding: '12px 6px', display: 'inline' }}\r\n            onMouseEnter={() => setHovered(true)}\r\n            onMouseLeave={() => setHovered(false)}\r\n        >\r\n            \r\n            <img\r\n                style={styles.imageSquare}\r\n                alt={props.file ? props.file.name : ''}\r\n                src={URL.createObjectURL(props.file)}\r\n            />\r\n\r\n            {\r\n                hovered &&\r\n                <CloseCircleTwoTone \r\n                    style={styles.closeIcon} \r\n                    onClick={() => props.onRemove && props.onRemove()}\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Thumbnail\r\n\r\nconst styles = {\r\n    imageSquare: { \r\n        height: '108px', \r\n        width: '108px', \r\n        border: '1px solid #afafaf',\r\n        borderRadius: '8px',\r\n        objectFit: 'cover',\r\n        display: 'inline',\r\n    },\r\n    closeIcon: {\r\n        position: 'relative', \r\n        bottom: '91px', \r\n        right: '20px', \r\n        width: '0px', \r\n        cursor: 'pointer'\r\n    }\r\n}","import React from 'react'\r\n\r\nimport Thumbnail from './Thumbnail'\r\n\r\nconst FileRow = props => {\r\n    function renderFiles() {\r\n        return props.files.map((file, index) => {\r\n            return (\r\n                <Thumbnail \r\n                    file={file} \r\n                    key={`thumb_${index}`} \r\n                    onRemove={() => props.onRemove && props.onRemove(index)}\r\n                />\r\n            )\r\n        })\r\n    }\r\n  \r\n    return (\r\n        <div style={{ width: 'calc(100% - 24px)', paddingLeft: '12px' }}>\r\n            { renderFiles() }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FileRow","import React, { useState } from 'react';\r\n\r\nimport { PaperClipOutlined } from '@ant-design/icons'\r\n\r\nconst ImagesInput = props => {\r\n    const [state, setState] = useState({\r\n        hovered: false,\r\n        files: []\r\n    })\r\n\r\n    function onSelect(event) {\r\n        let files = []\r\n        const indexes = [...Array(event.target.files.length).keys()]\r\n\r\n        indexes.map((i, index) => {\r\n            const file = event.target.files[index]\r\n            if (file) { files.push(file) }\r\n        })\r\n        \r\n        props.onSelectFiles &&  props.onSelectFiles(files)\r\n    }\r\n\r\n    return (\r\n        <form\r\n            className=\"uploader\"\r\n            encType=\"multipart/form-data\"\r\n            style={{ height: '0px' }}\r\n        >\r\n            <label\r\n                htmlFor=\"files\"\r\n                id='upload-document-button'\r\n            >\r\n                <PaperClipOutlined \r\n                    onMouseEnter={() => setState({ ...state, hovered: true })}\r\n                    onMouseLeave={() => setState({ ...state, hovered: false })}\r\n                    style={{\r\n                        ...{ cursor: 'pointer', position: 'absolute', bottom: '20px', right: '63px', fontSize: '18px' },\r\n                        ...{ color: state.hovered ? '#69c0ff' : '#1890ff' }\r\n                    }}\r\n                />\r\n            </label>\r\n\r\n            <input\r\n                multiple\r\n                id=\"files\"\r\n                accept=\"image/x-png,image/gif,image/jpeg\"\r\n                style={{ visibility: \"hidden\" }}\r\n                type=\"file\"\r\n                onChange={(e) => onSelect(e)} \r\n            />\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default ImagesInput\r\n","import React, { useContext, useState } from 'react'\r\n\r\nimport { ChatEngineContext } from '../../../Context'\r\n\r\nimport { sendMessage, isTyping } from 'react-chat-engine'\r\n\r\nimport FileRow from './FileRow'\r\nimport ImagesInput from './ImagesInput'\r\n\r\nimport { Button, TextAreaInput } from 'react-chat-engine'\r\n\r\nconst NewMessageForm = () => {\r\n  const { conn, activeChat, sendingMessages, setSendingMessages } = useContext(ChatEngineContext)\r\n\r\n  const [state, setState] = useState({\r\n    trigger: 0,\r\n    mod: 3,\r\n    value: '',\r\n    attachments: []\r\n  })\r\n\r\n  function onRemove(index) {\r\n    let { attachments } = state \r\n    attachments.splice(index, 1)\r\n    setState({ ...state, attachments })\r\n  }\r\n  \r\n  function handleChange(event) {\r\n    setState({\r\n      ...state,\r\n      value: event.target.value,\r\n      trigger: (state.trigger + 1) % state.mod\r\n    });\r\n    \r\n    if (state.trigger === 1) {\r\n      isTyping(conn, activeChat)\r\n    }\r\n  }\r\n  \r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    const { attachments } = state\r\n    const text = state.value.trim()\r\n    const custom_json = { sender_id: Date.now().toString() }\r\n    const sender_username = conn.userName ? conn.userName : conn.senderUsername\r\n    const data = { text, attachments, custom_json, sender_username, chat: activeChat }\r\n\r\n    if (text.length > 0 || attachments.length > 0) {\r\n      sendMessage(\r\n        conn, \r\n        activeChat, \r\n        data,\r\n        (data) => {}\r\n      )\r\n    }\r\n\r\n    setState({ ...state, value: '', attachments: [] })\r\n\r\n    let newSendingMessages = {...sendingMessages}\r\n    newSendingMessages[data.custom_json.sender_id] = data\r\n    setSendingMessages(newSendingMessages)\r\n  }\r\n\r\n  return (\r\n    <div \r\n      id='msg-form-container'\r\n      style={styles.NewMessageFormContainer}\r\n      className='ce-message-form-container'\r\n    >\r\n      <FileRow files={state.attachments} onRemove={(i) => onRemove(i)} />\r\n\r\n      <ImagesInput onSelectFiles={(attachments) => setState({ ...state, attachments })} />\r\n\r\n      <form onSubmit={handleSubmit.bind(this)} className='ce-message-form'>\r\n        <div style={styles.inputContainer} className='ce-message-input-form'>\r\n          <TextAreaInput\r\n            value={state.value}\r\n            label='Send a message...'\r\n            handleChange={handleChange.bind(this)}\r\n            onSubmit={handleSubmit.bind(this)}\r\n          />\r\n\r\n          <Button \r\n            icon='send'\r\n            type=\"submit\"\r\n            style={{ position: 'absolute', bottom: '10px', right: '6px' }}\r\n          />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewMessageForm\r\n\r\nconst styles = {\r\n  NewMessageFormContainer: { \r\n    position: 'absolute', \r\n    bottom: '0px', \r\n    width: '100%', \r\n    backgroundColor: 'white',\r\n  },\r\n  inputContainer: { \r\n    minHeight: '36px',\r\n    paddingTop: '10px',\r\n    paddingBottom: '6px',\r\n  },\r\n}","import axios from 'axios'\r\nimport * as str from '../../actions'\r\nimport { getHeaders } from '../auth'\r\n\r\nexport function sendMessage(props, chatId, data, callback) {\r\n    let formdata = new FormData()\r\n    \r\n    if (data.attachments) {\r\n        for (let i = 0; i < data.attachments.length; i++) { \r\n            formdata.append('attachments', data.attachments[i], data.attachments[i].name)\r\n        }\r\n    } else if (data.files) {\r\n        for (let i = 0; i < data.files.length; i++) { \r\n            formdata.append('attachments', data.files[i], data.files[i].name)\r\n        }\r\n    }\r\n\r\n    formdata.append('text', data.text)\r\n    formdata.append('sender_username', data.sender_username)\r\n    formdata.append('custom_json', JSON.stringify(data.custom_json ? data.custom_json : {}))\r\n    \r\n    axios.post(\r\n        `${str.getApiUrl(props)}/chats/${chatId}/messages/`,\r\n        formdata,\r\n        { headers: getHeaders(props) }\r\n    )\r\n\r\n    .then((response) => {\r\n        callback && callback(response.data)\r\n    })\r\n    \r\n    .catch((error) => {\r\n        console.log('Send Messages Error', error)\r\n    });\r\n    \r\n}","import axios from 'axios'\r\n\r\nimport * as str from '..'\r\nimport { getHeaders } from '../auth'\r\n\r\nexport function isTyping(props, chatId, callback) {\r\n    axios.post(\r\n        `${str.getApiUrl(props)}/chats/${chatId}/typing/`,\r\n        {},\r\n        { headers: getHeaders(props) }\r\n    )\r\n\r\n    .then((response) => {\r\n        callback && callback(response.data)\r\n    })\r\n    \r\n    .catch((error) => {});\r\n}","import React from 'react'\r\n\r\nimport { stringToColor } from '../Utilities/colorMapping'\r\n\r\nconst IsTyping = props => {\r\n    return (\r\n        <div style={{ color: stringToColor(props.username), padding: '2px', paddingLeft: '12px' }}>\r\n            {`${props.username} is typing...`}\r\n        </div>\r\n    )\r\n}\r\nexport default IsTyping","import React, { useContext, useState, useEffect, useRef } from 'react'\r\n\r\nimport { ChatEngineContext } from '../../Context'\r\n\r\nimport { getMessages, readMessage } from '../../../actions/messages'\r\n\r\nimport ChatHeader from './ChatHeader'\r\nimport { AuthFail, Loading, Welcome } from './Steps'\r\n\r\nimport MessageBubble from './MessageBubble'\r\nimport NewMessageForm from './NewMessageForm'\r\nimport IsTyping from './IsTyping'\r\n\r\nimport _ from 'lodash'\r\n\r\nimport { animateScroll } from \"react-scroll\"\r\n\r\nconst ChatFeed = props => {\r\n    const didMountRef = useRef(false)\r\n    const [duration, setDuration] = useState(0)\r\n    const [currentChat, setCurrentChat] = useState(null)\r\n    const { \r\n        connecting, conn,\r\n        chats, setChats,\r\n        sendingMessages,\r\n        messages, setMessages,\r\n        activeChat, setActiveChat,\r\n        typingData, setTypingData, \r\n        typingCounter, setTypingCounter,\r\n    } = useContext(ChatEngineContext)\r\n\r\n    function onReadMessage(chat) {\r\n        if (chats) {\r\n            const newChats = {...chats}\r\n            newChats[chat.id] = chat\r\n            setChats(newChats)\r\n        }\r\n    }\r\n\r\n    function onGetMessages(chatId, messages) {\r\n        setMessages(_.mapKeys(messages, 'id'))\r\n\r\n        if (messages.length > 0) {\r\n            const message = messages[messages.length - 1]\r\n\r\n            if (props.userName && props.userName !== message.sender_username) {\r\n                readMessage(conn, chatId, message.id, (chat) => onReadMessage(chat))\r\n            }\r\n        }\r\n        \r\n        props.onGetMessages && props.onGetMessages(chatId, messages)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (conn && !props.activeChat && activeChat !== null && activeChat !== currentChat) {\r\n            setCurrentChat(activeChat)\r\n            getMessages(conn, activeChat, (chatId, messages) => onGetMessages(chatId, messages))\r\n\r\n        } else if (conn && props.activeChat && props.activeChat !== currentChat) {\r\n            setActiveChat(props.activeChat)\r\n            setCurrentChat(props.activeChat)\r\n            getMessages(conn, props.activeChat, (chatId, messages) => onGetMessages(chatId, messages))\r\n        }\r\n    }, [conn, activeChat])\r\n\r\n    useEffect(() => { // TODO: Is typing is super shitty\r\n        if (typingCounter) {\r\n            const newTypingCounter = {...typingCounter}\r\n            Object.keys(newTypingCounter).map(chatId => {\r\n                Object.keys(newTypingCounter[chatId]).map(person => {\r\n                    if (newTypingCounter[chatId][person] > 0) {\r\n                        setTimeout(() => {\r\n                            setTypingCounter({\r\n                                ...newTypingCounter,\r\n                                [chatId]: {\r\n                                    ...newTypingCounter[chatId],\r\n                                    [person]: newTypingCounter[chatId][person] - 1\r\n                                }\r\n                            })\r\n                        }, 2500)\r\n                    }\r\n                })\r\n            })\r\n        }\r\n    }, [typingCounter])\r\n\r\n    useEffect(() => {\r\n        if (!didMountRef.current) {\r\n            didMountRef.current = true\r\n            setTimeout(() => { // Once chat loads, animate scroll\r\n                setDuration(100)\r\n            }, 3000);\r\n\r\n        } else {\r\n            if(!_.isEmpty(messages)) { // Scroll (TODO: Make more sophisticated)\r\n                animateScroll.scrollToBottom({\r\n                    duration,\r\n                    containerId: \"ce-feed-container\"\r\n                })\r\n            }\r\n\r\n            Object.keys(typingCounter).map((chat) => { // Render Typing Data\r\n                let typers = []\r\n        \r\n                Object.keys(typingCounter[chat]).map((person) => {\r\n                    if (typingCounter[chat][person] > 0) {\r\n                        typers.push(person)\r\n                    }\r\n                })\r\n        \r\n                if (!typingData[chat] || typingData[chat].length !== typers.length) {\r\n                    setTypingData({ ...typingData, [chat]: typers })\r\n                }\r\n            })\r\n        }\r\n    })\r\n\r\n    function renderTypers() {\r\n        const typers = typingData && typingData[activeChat] ? typingData[activeChat] : []\r\n\r\n        if (props.renderIsTyping) {\r\n            return props.renderIsTyping(typers)\r\n        }\r\n\r\n        return typers.map((username, index) => <IsTyping key={`typer_${index}`} username={username} />)\r\n    }\r\n\r\n    function renderMessages() {\r\n        const chat = chats && chats[activeChat]\r\n        const keys = Object.keys(messages)\r\n        \r\n        return keys.map((key, index) => {\r\n            const message = messages[key]\r\n            const lastMessageKey = index === 0 ? null : keys[index - 1]\r\n            const nextMessageKey = index === keys.length - 1 ? null : keys[index + 1]\r\n\r\n            if (props.renderMessageBubble) {\r\n                return (\r\n                    <div key={`message_${index}`}>\r\n                        { \r\n                            props.renderMessageBubble(\r\n                                conn, \r\n                                chat, \r\n                                messages[lastMessageKey], \r\n                                message, \r\n                                messages[nextMessageKey]\r\n                            ) \r\n                        }\r\n                    </div>\r\n                )\r\n            }\r\n            \r\n            return (\r\n                <MessageBubble \r\n                    key={`message_${index}`}\r\n                    chat={chat}\r\n                    message={message}\r\n                    lastMessage={messages[lastMessageKey]}\r\n                    nextMessage={messages[nextMessageKey]}\r\n                />\r\n            )\r\n        })\r\n    }\r\n\r\n    function renderSendingMessages() {\r\n        const keys = Object.keys(sendingMessages)\r\n        const chat = chats && chats[activeChat]\r\n\r\n        return keys.map((key, index) => {\r\n            const message = sendingMessages[key]\r\n            const lastMessageKey = index === 0 ? null : keys[index - 1]\r\n            const nextMessageKey = index === keys.length - 1 ? null : keys[index + 1]\r\n\r\n            if(message && message.chat === activeChat) {\r\n                return (\r\n                    <MessageBubble \r\n                        sending\r\n                        key={`sending-msg-${index}`}\r\n                        chat={chat}\r\n                        message={message}\r\n                        lastMessage={sendingMessages[lastMessageKey]}\r\n                        nextMessage={sendingMessages[nextMessageKey]}\r\n                    />\r\n                )\r\n            }\r\n        })\r\n    }\r\n\r\n    const chat = chats && chats[currentChat] \r\n\r\n    if(conn === undefined) { return <AuthFail /> }\r\n\r\n    if(conn && chats !== null && _.isEmpty(chats)) { return <Welcome /> }\r\n\r\n    return (\r\n        <div \r\n            className='ce-chat-feed'\r\n            style={{ height: '100%', maxHeight: '100vh', backgroundColor: '#f0f0f0' }}\r\n        >\r\n            { connecting && <Loading /> }\r\n\r\n            {\r\n                props.renderChatHeader ? \r\n                props.renderChatHeader(chat) :\r\n                <ChatHeader />\r\n            }\r\n\r\n            <div\r\n                id='ce-feed-container'\r\n                style={styles.feedContainer} \r\n                className='ce-chat-feed-container'\r\n            >\r\n                <div style={{ height: '88px' }} className='ce-feed-container-top' />\r\n\r\n                { renderMessages() }\r\n\r\n                { renderSendingMessages() }\r\n\r\n                { renderTypers() }\r\n\r\n                <div style={{ height: '54px' }} className='ce-feed-container-bottom' />\r\n            </div>\r\n\r\n            {\r\n                props.renderNewMessageForm ?\r\n                props.renderNewMessageForm(props, currentChat) :\r\n                <NewMessageForm />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatFeed\r\n\r\nconst styles = {\r\n    feedContainer: { \r\n        width: '100%',\r\n        height: '100%',\r\n        maxHeight: '100vh',\r\n        overflowX: 'hidden',\r\n        overflowY: 'scroll',\r\n        backgroundColor: 'white',\r\n    }\r\n}","import React, { useContext } from 'react'\r\n\r\nimport { ChatEngineContext } from '../Context'\r\n\r\nimport _ from 'lodash'\r\n\r\nimport Socket from '../Socket'\r\n\r\nimport ChatList from './ChatList'\r\nimport ChatFeed from './ChatFeed'\r\nimport ChatSettings from './ChatSettings'\r\n\r\nimport { Row, Col } from 'react-grid-system'\r\nimport { setConfiguration } from 'react-grid-system';\r\n \r\nsetConfiguration({ maxScreenClass: 'xl', gutterWidth: 0 });\r\n\r\nconst ChatEngine = props => {\r\n  const context = useContext(ChatEngineContext)\r\n  const { height } = props\r\n\r\n  return (\r\n    <div style={{ textAlign: 'left', backgroundColor: 'white' }}>\r\n      <Socket {...props} />\r\n\r\n      <Row>\r\n        <Col xs={0} sm={3} style={{ height: height ? height : '' }}>\r\n          {\r\n            props.renderChatList ?\r\n            props.renderChatList({...props, ...context}) :\r\n            <ChatList { ...props} />\r\n          }\r\n        </Col>\r\n\r\n        <Col xs={12} sm={6} style={{ height: height ? height : '' }}>\r\n          {\r\n            props.renderChatFeed ?\r\n            props.renderChatFeed({...props, ...context}) :\r\n            <ChatFeed { ...props} />\r\n          }\r\n        </Col>\r\n\r\n        <Col xs={0} sm={3} style={{ height: height ? height : '' }}>\r\n          {\r\n            props.renderChatSettings ?\r\n            props.renderChatSettings({...props, ...context}) :\r\n            <ChatSettings { ...props} />\r\n          }\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChatEngine","import React, { useContext } from 'react'\r\n\r\nimport ChatEngine from './ChatEngine'\r\n\r\nimport { ChatEngineWrapper, ChatEngineContext } from './Context'\r\n\r\nconst ChatEngineApp = (props) => {\r\n    if (useContext(ChatEngineContext)) {\r\n        return <ChatEngine {...props} />\r\n    } else {\r\n        return <ChatEngineWrapper><ChatEngine {...props} /></ChatEngineWrapper>\r\n    }\r\n    \r\n}\r\n\r\nexport default ChatEngineApp\r\n","import React, { useContext } from 'react'\r\n\r\nimport { ChatEngineContext } from '../Context'\r\n\r\nimport { getChat } from '../../actions/chats'\r\n\r\nimport { WebSocket } from 'nextjs-websocket'\r\n\r\nconst ChatSocket = props => {\r\n    const {\r\n      setConnecting,\r\n      conn, setConn,\r\n      chats, setChats,\r\n      messages, setMessages,\r\n      sendingMessages, setSendingMessages,\r\n      activeChat, setActiveChat,\r\n      typingCounter, setTypingCounter,\r\n    } = useContext(ChatEngineContext)\r\n\r\n    // Common Context Handlers\r\n\r\n    function onEditChat(chat) {\r\n        if (chats) {\r\n            const newChats = {...chats}\r\n            newChats[chat.id] = chat\r\n            setChats(newChats)\r\n        }\r\n\r\n        props.onEditChat && props.onEditChat(chat)\r\n    }\r\n\r\n    function onGetChat(chat) {\r\n        if (activeChat === null) {\r\n            setActiveChat(chat.id)\r\n        }\r\n\r\n        setChats(_.mapKeys([chat], 'id'))\r\n    }\r\n\r\n    function onConnect(conn) {\r\n        setConn(conn)\r\n        setConnecting(false)\r\n    \r\n        getChat(conn, props.chatID, (chat) => onGetChat(chat)) // Not redundant\r\n    \r\n        props.onConnect && props.onConnect(conn)\r\n    }\r\n    \r\n    // Socket Events\r\n\r\n    function handleEvent(event) {\r\n        const eventJSON = JSON.parse(event)\r\n\r\n        if (eventJSON.action === 'login_error') {\r\n            console.log(\r\n                `Your chat auth credentials were not correct: \\n\r\n                Project ID: ${props.projectID} \\n\r\n                Chat ID: ${props.chatID} \\n\r\n                Access Key: ${props.chatAccessKey}\\n\r\n                Double check these credentials to make sure they're correct.\\n\r\n                If all three are correct, try resetting the username and secret in the Online Dashboard or Private API.`\r\n            )\r\n\r\n            setConn(undefined)\r\n\r\n            props.onFailAuth && props.onFailAuth(conn)\r\n\r\n        } else if (eventJSON.action === 'edit_chat') {\r\n            onEditChat(eventJSON.data)\r\n            \r\n        } else if (eventJSON.action === 'delete_chat') {\r\n            const chat = eventJSON.data \r\n\r\n            if (chats) {\r\n                chats[chat.id] = undefined\r\n                \r\n                setChats(chats)\r\n            }\r\n\r\n            props.onDeleteChat && props.onDeleteChat(chat)\r\n\r\n        } else if (eventJSON.action === 'add_person') {\r\n            onEditChat(eventJSON.data)\r\n            \r\n            props.onAddPerson && props.onAddPerson(eventJSON.data)\r\n\r\n        } else if (eventJSON.action === 'remove_person') {\r\n            onEditChat(eventJSON.data)\r\n\r\n            props.onRemovePerson && props.onRemovePerson(eventJSON.data)\r\n\r\n        } else if (eventJSON.action === 'new_message') {\r\n            const { id, message } = eventJSON.data\r\n\r\n            if (typeof message.custom_json === \"string\" && message.custom_json.indexOf('sender_id') !== -1) {\r\n                sendingMessages[JSON.parse(message.custom_json).sender_id] = undefined\r\n                setSendingMessages(sendingMessages)\r\n            }\r\n        \r\n            if (id === activeChat) {\r\n                const newMessages = {...messages}\r\n                newMessages[message.id] = message\r\n                setMessages(newMessages)\r\n            }\r\n\r\n            props.onNewMessage && props.onNewMessage(id, message)\r\n\r\n        } else if (eventJSON.action === 'edit_message') {\r\n            const { id, message } = eventJSON.data\r\n            \r\n            if (id === activeChat) {\r\n                messages[message.id] = message\r\n                setMessages(messages)\r\n            }\r\n\r\n            props.onEditMessage && props.onEditMessage(id, message)\r\n\r\n        } else if (eventJSON.action === 'delete_message') {\r\n            const { id, message } = eventJSON.data\r\n\r\n            if (id === activeChat) {\r\n                messages[message.id] = undefined\r\n                setMessages(messages)\r\n            }\r\n\r\n            props.onDeleteMessage && props.onDeleteMessage(id, message)\r\n        \r\n        } else if (eventJSON.action === 'is_typing') {\r\n            const { id, person } = eventJSON.data\r\n            let newTypingCounter = {...typingCounter}\r\n\r\n            if (newTypingCounter[id] && newTypingCounter[id][person]) {\r\n                newTypingCounter = {\r\n                    ...newTypingCounter,\r\n                    [id]: {\r\n                        ...newTypingCounter[id],\r\n                        [person]: newTypingCounter[id][person] + 1\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                newTypingCounter = {\r\n                    ...newTypingCounter,\r\n                    [id]: {\r\n                        ...newTypingCounter[id],\r\n                        [person]: 1\r\n                    }\r\n                }\r\n            }\r\n                \r\n            setTypingCounter(newTypingCounter)\r\n                \r\n            props.onTyping && props.onTyping(id, person)\r\n        }\r\n    }\r\n\r\n    function onClose() { setConnecting(true) }\r\n\r\n    // Render\r\n    \r\n    const {\r\n        development,\r\n        publicKey, projectID, \r\n        chatID, chatAccessKey, \r\n    } = props \r\n    \r\n    const wsStart = development ? 'ws://' : 'wss://'\r\n    const rootHost = development ? '127.0.0.1:8000' : 'api.chatengine.io'\r\n    const project = publicKey ? publicKey : projectID\r\n\r\n    return <WebSocket \r\n        url={`${wsStart}${rootHost}/chat/?projectID=${project}&chatID=${chatID}&accessKey=${chatAccessKey}`}\r\n        onOpen={() => onConnect(props)}\r\n        onClose={onClose.bind(this)}\r\n        onMessage={handleEvent.bind(this)}\r\n        reconnectIntervalInMilliSeconds={3000}\r\n    />\r\n}\r\n\r\nexport default ChatSocket","import axios from 'axios'\r\nimport * as str from '../../actions'\r\nimport { getHeaders } from '../auth'\r\n\r\nexport function getChat(props, chatId, callback) {\r\n    axios.get(\r\n        `${str.getApiUrl(props)}/chats/${chatId}/`,\r\n        { headers: getHeaders(props) }\r\n    )\r\n\r\n    .then((response) => {\r\n        callback && callback(response.data)\r\n    })\r\n    \r\n    .catch((error) => {\r\n        console.log('Get Chat Error', error)\r\n    });\r\n}","import axios from 'axios'\r\n\r\nimport * as str from '..'\r\nimport { getHeaders } from '../auth'\r\n\r\nexport function addPerson(props, chatId, userName, callback) {\r\n    axios.post(\r\n        `${str.getApiUrl(props)}/chats/${chatId}/people/`,\r\n        { username: userName },\r\n        { headers: getHeaders(props) }\r\n    )\r\n\r\n    .then((response) => {\r\n        callback && callback(response.data)\r\n    })\r\n    \r\n    .catch((error) => {\r\n        console.log('New Person Error', error)\r\n    });\r\n}","import React, { Component } from 'react'\r\n\r\nimport { stringToColor } from '../../Utilities/colorMapping' \r\n\r\n\r\nexport default class Avatar extends Component {\r\n    state = { avatar: '' }  \r\n\r\n    updateImg() {\r\n        let { avatar } = this.props\r\n        avatar = avatar && avatar !== null ? avatar : ''\r\n        \r\n        if (avatar.split('?')[0] !== this.state.avatar.split('?')[0]) {\r\n            this.setState({ avatar })\r\n        }\r\n    }\r\n\r\n    componentDidMount() { this.updateImg() }\r\n\r\n    componentDidUpdate() { this.updateImg() }\r\n\r\n    render() {\r\n        const { username, is_online } = this.props\r\n        const customStyle = this.props.style ? this.props.style : {}\r\n        const text = username ? username.substring(0, 2).toUpperCase() : ''\r\n        const color = stringToColor(username)    \r\n                \r\n        return (\r\n            <div style={{ width: '48px', height: '48px' }}>\r\n                <div style={{ height: '0px' }}>\r\n                    <div \r\n                        className='ce-avatar'\r\n                        style={{ \r\n                            ...styles.avatar, \r\n                            ...customStyle, \r\n                            ...{ \r\n                                backgroundColor: this.state.avatar ? 'white' : color,\r\n                                backgroundImage: this.state.avatar && `url(${this.state.avatar})`,\r\n                                backgroundRepeat: 'no-repeat',\r\n                                backgroundPosition: 'center',\r\n                                backgroundSize: '48px',\r\n                            }\r\n                        }}\r\n                    >   \r\n                        <div \r\n                            className='ce-avatar-text'\r\n                            style={styles.avatarText}\r\n                        >\r\n                            { !this.state.avatar && text }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {\r\n                    this.props.show_online !== false && \r\n                    <div\r\n                        className='ce-avatar-status'\r\n                        style={{\r\n                            ...styles.status, \r\n                            ...{ backgroundColor: is_online ? '#52c41a' : '#f5222d' }\r\n                        }}\r\n                    />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    avatar: {\r\n        width: '44px',\r\n        height: '44px',\r\n        borderRadius: '22px',\r\n        color: 'white',\r\n        textAlign: 'center',\r\n    },\r\n    avatarText: {\r\n        color: 'white', \r\n        paddingTop: '12px', \r\n        fontSize: '15px', \r\n        fontWeight: '600'\r\n    },\r\n    status: { \r\n        width: '8px', \r\n        height: '8px', \r\n        borderRadius: '100%', \r\n        border: '2px solid white',   \r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nimport { PlusOutlined, ArrowUpOutlined, DeleteOutlined, UserAddOutlined } from '@ant-design/icons'\r\n\r\nexport default class Button extends Component {\r\n    state = {\r\n        hovered: false\r\n    }\r\n\r\n    render() {\r\n        const { value, icon, theme, style } = this.props\r\n\r\n        const customStyle = style ? style : {}\r\n        const hoverStyle = this.state.hovered ? styles.hoverButton : {}\r\n        const themeStyle = theme === 'danger' ? styles.dangerButton : styles.button\r\n\r\n        return (\r\n            <button \r\n                type={this.props.type}\r\n                onClick={() => this.props.onClick && this.props.onClick()}\r\n                onMouseEnter={() => this.setState({ hovered: true })}\r\n                onMouseLeave={() => this.setState({ hovered: false })}\r\n                style={{ ...themeStyle, ...customStyle, ...hoverStyle }}\r\n                className={`ce-primary-button ${theme === 'danger' ? 'ce-danger-button' : ''}`}\r\n            >\r\n\r\n                { icon === 'plus' && <PlusOutlined /> }\r\n                { icon === 'send'  && <ArrowUpOutlined /> }\r\n                { icon === 'delete'  && <DeleteOutlined /> }\r\n                { icon === 'user-add'  && <UserAddOutlined /> }\r\n\r\n                { value && icon ? ` ${value}` : value}  \r\n\r\n            </button>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    button: {\r\n        color: 'white',\r\n        border: 'none',\r\n        outline: 'none',\r\n        height: '36px',\r\n        fontSize: '15px',\r\n        cursor: 'pointer',\r\n        padding: '8px 16px',\r\n        borderRadius: '33px',\r\n        backgroundColor: '#1890ff'\r\n    },\r\n    dangerButton: {\r\n        color: 'red',\r\n        border: 'none',\r\n        outline: 'none',\r\n        height: '36px',\r\n        fontSize: '15px',\r\n        cursor: 'pointer',\r\n        padding: '8px 16px',\r\n        borderRadius: '33px',\r\n        backgroundColor: 'white',\r\n        border: '1px solid red',\r\n    },\r\n    hoverButton: {\r\n        opacity: '0.66'\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class TextInput extends Component {\r\n    state = {\r\n        focused: false,\r\n        value: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        const value = this.props.default\r\n        if(value) {\r\n            const event = {target: {value}}\r\n            this.props.handleChange(event)\r\n            this.setState({ value })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const customStyle = this.props.style ? this.props.style : {}\r\n        const defaultStyle = this.state.focused ? styles.focusInput : styles.input\r\n\r\n        return (\r\n            // NOTE: You may need to make a div the searchContainer to put icons in...\r\n            <input \r\n                className='ce-input ce-text-input'\r\n                value={this.props.value} \r\n                placeholder={this.props.label}\r\n                style={{ ...defaultStyle, ...customStyle }}\r\n                onBlur={() => this.setState({ focused: false })}\r\n                onFocus={() => this.setState({ focused: true })}\r\n                type={this.props.type ? this.props.type : \"text\" }\r\n                onChange={(e) => this.props.handleChange && this.props.handleChange(e)} \r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    input: {\r\n        // Sizes\r\n        height: '36px',\r\n        fontSize: '15px',\r\n        // Border\r\n        outline: 'none',\r\n        borderRadius: '24px',\r\n        border: '1px solid #d9d9d9',\r\n        // Padding and fixed width\r\n        padding: '0px 12px',\r\n        boxSizing: 'border-box',\r\n    },\r\n    focusInput: {\r\n        // Sizes\r\n        height: '36px',\r\n        fontSize: '15px',\r\n        // Border\r\n        outline: 'none',\r\n        borderRadius: '24px',\r\n        border: '1px solid #1890ff',\r\n        // Padding and fixed width\r\n        padding: '0px 12px',\r\n        boxSizing: 'border-box',\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class TextAreaInput extends Component {\r\n    state = {\r\n        focused: false,\r\n        value: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        const value = this.props.default\r\n\r\n        if(value) {\r\n            this.props.handleChange({ target: { value } })\r\n            this.setState({ value })\r\n        }\r\n    }\r\n\r\n    resize() {\r\n        var textarea = document.getElementById(\"msg-textarea\");\r\n        textarea.style.height = \"\";\r\n        textarea.style.height = Math.min(textarea.scrollHeight, 150) + \"px\";\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.resize()\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.resize()\r\n        this.props.handleChange && this.props.handleChange(e)\r\n    }\r\n\r\n    onKeyDown(e) {\r\n        if (e.key === 'Enter') { \r\n            e.preventDefault()\r\n\r\n            if (this.props.value.length > 0) {\r\n                this.props.onSubmit && this.props.onSubmit(e) \r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <textarea \r\n                id='msg-textarea'\r\n                className='ce-input ce-textarea-input'\r\n                rows='1'\r\n                style={ styles.input }\r\n                value={ this.props.value }\r\n                placeholder={ this.props.label }\r\n                onBlur={() => this.setState({ focused: false })}\r\n                onFocus={() => this.setState({ focused: true })}\r\n                type={this.props.type ? this.props.type : \"text\" }\r\n                onChange={(e) => this.handleChange(e)} \r\n                onKeyDown={(e) => this.onKeyDown(e)}\r\n            />\r\n        )\r\n    }\r\n}\r\n// This is another thing we need to chat about which regards the competence of one more\r\nconst styles = {\r\n    input: { \r\n        // Border\r\n        border: '1px solid white',\r\n        width: 'calc(100% - 64px - 24px - 44px)',\r\n        outline: 'none', \r\n        // Fonts\r\n        fontFamily: 'inherit',\r\n        fontSize: '15px',\r\n        // Padding\r\n        paddingLeft: '12px',\r\n        paddingRight: '12px',\r\n        // Position\r\n        position: 'relative', \r\n        left: '12px',\r\n        // Dynamic Sizing\r\n        resize: 'none', \r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nimport { CloseOutlined } from '@ant-design/icons'\r\n\r\nexport default class AutoComplete extends Component {\r\n    state = {\r\n        focused: false,\r\n        showAll: false,\r\n    }\r\n\r\n    onFocus() {\r\n        this.onChange('', true)\r\n        this.setState({ focused: true })\r\n        this.props.onFocus && this.props.onFocus()\r\n    }\r\n\r\n    onBlur() {\r\n        this.setState({ focused: false })\r\n        this.props.onBlur && this.props.onBlur()\r\n    }\r\n\r\n    onChange(value, showAll) {\r\n        this.setState({ showAll })\r\n        this.props.handleChange && this.props.handleChange(value)\r\n    }\r\n\r\n    getNames() {\r\n        let count = 0\r\n        const max = this.props.max ? this.props.max : 3\r\n        \r\n        const results = []\r\n\r\n        this.props.options.map(option => {\r\n            if (JSON.stringify(option).toLowerCase().indexOf(this.props.value.toLowerCase()) !== -1 && count < max) {\r\n                count = count + 1\r\n                results.push(option)\r\n            }\r\n        })\r\n        \r\n        return results\r\n    }\r\n\r\n\r\n    renderOptions() {\r\n        if(!this.props.value && !this.state.showAll) { return <div /> }\r\n\r\n        const results = this.getNames()\r\n\r\n        return results.map((option, index) => {\r\n            return (\r\n                <div key={`option_${index}`} className='ce-autocomplete-option'>\r\n                    { this.props.renderOption && this.props.renderOption(option) }\r\n\r\n                    { \r\n                        index === results.length - 1 && \r\n                        <div \r\n                            style={styles.close} \r\n                            className='ce-autocomplete-close'\r\n                            onClick={() => this.onChange('', false)}\r\n                        >\r\n                            <CloseOutlined />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { options } = this.props\r\n        const customStyle = this.props.style ? this.props.style : {}\r\n        const defaultStyle = { ...styles.input, ...{ border: this.state.focused ? '1px solid #1890ff' : '1px solid #d9d9d9' } }\r\n\r\n        return (\r\n            <div>\r\n                <input \r\n                    className='ce-input ce-autocomplete-input'\r\n                    value={this.props.value} \r\n                    placeholder={this.props.label}\r\n                    style={{ ...defaultStyle, ...customStyle }}\r\n                    type={this.props.type ? this.props.type : \"text\" }\r\n                    onBlur={() => this.onBlur()}\r\n                    onFocus={() => this.onFocus()}\r\n                    onChange={(e) => this.onChange(e.target.value, true)}\r\n                />\r\n\r\n                {\r\n                    options && options.length > 0 && this.state.showAll &&\r\n                    <div \r\n                        className='ce-autocomplete-options'\r\n                        style={{ borderRadius: '19px', border: '1px solid #afafaf', overflow: 'hidden' }}\r\n                    >\r\n                        { this.props.options && this.renderOptions() }\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    input: {\r\n        height: '36px',\r\n        fontSize: '15px',\r\n        outline: 'none',\r\n        borderRadius: '24px',\r\n        padding: '0px 12px',\r\n        boxSizing: 'border-box'\r\n    },\r\n    close: {\r\n        cursor: 'pointer',\r\n        textAlign: 'center',\r\n        padding: '8px 12px',\r\n        fontSize: '15px',\r\n        borderRadius: '24px',\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nimport { ChatEngineWrapper, ChatSocket, ChatFeed } from 'react-chat-engine'\r\n\r\nimport { Row, Col } from 'react-grid-system'\r\nimport { setConfiguration } from 'react-grid-system';\r\n \r\nsetConfiguration({ maxScreenClass: 'xl', gutterWidth: 0 });\r\n\r\nconst prod = false // window.location.host.indexOf('chatengine.io') !== -1\r\n\r\nconst projectID = prod ? '...' : '1ed59673-1fd6-46ed-9eb9-56239a6a4f82'\r\nconst chatID = prod ? 0 : 251\r\nconst chatAccessKey = prod ? '123' : 'ca-0d21f8cb-b884-4a8b-9e2e-a2acbdbc3792'\r\nconst senderUsername = 'Adam La Morre'\r\n\r\nexport default class HomePage extends Component {\r\n    state = {\r\n        loading: false,\r\n        c: null,\r\n    }\r\n    \r\n    render() { \r\n        return (\r\n            <Row>\r\n                <Col xs={12} sm={6} md={4} style={{ height: '600px' }}>\r\n                    <ChatEngineWrapper>\r\n                        <ChatSocket \r\n                            development={!prod}\r\n                            projectID={projectID}\r\n                            chatID={chatID}\r\n                            chatAccessKey={chatAccessKey}\r\n                            senderUsername={senderUsername}\r\n                        />\r\n\r\n                        <ChatFeed \r\n                            development={!prod}\r\n                            projectID={projectID}\r\n                            chatID={chatID}\r\n                            chatAccessKey={chatAccessKey}\r\n                            activeChat={chatID}\r\n                            senderUsername={senderUsername}\r\n                        />                        \r\n                    </ChatEngineWrapper>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nimport { ChatEngine, newChat, addPerson } from 'react-chat-engine'\r\n\r\nexport default class DirectChatPage extends Component {    \r\n    state = {\r\n        username: ''\r\n    }\r\n\r\n    createDirectChat(creds) {\r\n        newChat(\r\n            creds,\r\n            {is_direct_chat: true},\r\n            (chat) => addPerson(creds, chat.id, this.state.username)\r\n        )\r\n    }\r\n\r\n    renderChatForm(creds) {\r\n        return (\r\n            <div>\r\n                <input placeholder='Username' value={this.state.username} onChange={(e) => this.setState({username: e.target.value})} />\r\n                <button onClick={() => this.createDirectChat(creds)}>Chat</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ position: 'absolute', top: '0px', width: '100%' }}>\r\n                <ChatEngine \r\n                    height='100vh'\r\n                    userName={'Adam_La_Morre'}\r\n                    userSecret={'pass1234'}\r\n                    projectID={'1ed59673-1fd6-46ed-9eb9-56239a6a4f82'}\r\n                    renderNewChatForm={(creds) => this.renderChatForm(creds)}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}","export const SIGN_IN_OK = 'SIGN_IN_OK'\r\nexport const SIGN_OUT = 'SIGN_OUT'\r\n","import axios from 'axios';\r\nimport * as str from '../index.js';\r\n\r\nexport const login = (data, successFunc, errorFunc) => (dispatch) => {\r\n    axios.get(\r\n        `${data.rootUrl}users/me/`, \r\n        { headers: {\r\n            'Project-ID': data.projectID,\r\n            'User-Name': data.userName,\r\n            'User-Secret': data.userSecret,\r\n        }}\r\n    )\r\n\r\n    .then((response) => {\r\n        successFunc && successFunc(response)\r\n\r\n        dispatch({\r\n            type: str.SIGN_IN_OK,\r\n            payload: data\r\n        });\r\n    })\r\n\r\n    .catch((error) => {\r\n      errorFunc && errorFunc(error)\r\n    });\r\n}","import * as str from '../index.js';\r\n\r\nexport const logout = () => (dispatch) => {\r\n    dispatch({\r\n        type: str.SIGN_OUT\r\n    });\r\n}","import React, { useContext, useState, useEffect } from 'react'\r\n\r\nimport _ from 'lodash'\r\n\r\nimport { ChatEngine, ChatEngineContext } from 'react-chat-engine'\r\n\r\nconst ChatEngineApp = props => {\r\n    const { chats, messages, setActiveChat } = useContext(ChatEngineContext)\r\n    const [hasSetLink, setLink] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const { id } = props\r\n        if (id && chats && chats[id] && !_.isEmpty(messages) && !hasSetLink) {\r\n            setActiveChat(id)\r\n            setLink(true)\r\n        }\r\n    }, [chats, messages, props, setActiveChat, hasSetLink, setLink])\r\n\r\n    return (\r\n        <ChatEngine \r\n            height='100vh'\r\n            development={!props.prod}\r\n            userName={props.userName}\r\n            userSecret={props.userSecret}\r\n            projectID={props.projectID}\r\n        />\r\n    )\r\n}\r\n\r\nexport default ChatEngineApp","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { login, logout } from '../Actions/Accounts'\r\n\r\nimport { ChatEngineWrapper } from 'react-chat-engine'\r\n\r\nimport ChatEngine from './ChatEngine'\r\n\r\nconst prod = window.location.host.indexOf('chatengine.io') !== -1\r\n\r\nconst HomePage = props => {\r\n    const [state, setState] = useState({\r\n        loading: false,\r\n        rootUrl: prod ? 'https://api.chatengine.io/' : 'http://127.0.0.1:8000/',\r\n        projectID: prod ? '8a1f9edb-a05a-4b55-9d6e-ec399a38f5a9' : '1ed59673-1fd6-46ed-9eb9-56239a6a4f82',\r\n        userName: '',\r\n        userSecret: '',\r\n    })\r\n    const { id } = props.match.params\r\n\r\n    function submit(){\r\n        setState({ ...state, loading: true })\r\n        props.login(\r\n            state, \r\n            () => {},\r\n            (error) => console.log(error)\r\n        )\r\n    }\r\n    \r\n    if (!props.accounts.userName) {\r\n        return (\r\n            <div>\r\n                <input \r\n                    type='text'\r\n                    placeholder='User Name'\r\n                    onChange={(e) => setState({ ...state, userName: e.target.value })}\r\n                />\r\n                <input \r\n                    type='password'\r\n                    placeholder='Password'\r\n                    onChange={(e) => setState({ ...state, userSecret: e.target.value })}\r\n                />\r\n\r\n                <button \r\n                    onClick={() => submit()}\r\n                    style={{ backgroundColor: state.loading ? '#f0f0f0' : '#91d5ff' }}\r\n                >\r\n                    Submit\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div style={{ position: 'absolute', top: '0px', width: '100%' }}>\r\n            <ChatEngineWrapper>\r\n                <ChatEngine {...props.accounts} {...prod} id={parseInt(id)} />\r\n            </ChatEngineWrapper>\r\n\r\n            <button \r\n                onClick={() => props.logout()}\r\n                style={{ position: 'absolute', bottom: '24px', right: '24px' }}\r\n            >\r\n                Logout!\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return { accounts: state.accounts }\r\n}\r\n  \r\nfunction mapDispatchToProps(dispatch){\r\n    return bindActionCreators({ login, logout }, dispatch)\r\n}\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Router, Route, Switch } from 'react-router-dom'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport history from '../Utilities/history'\r\n\r\nimport ChatWithMePage from './ChatWithMePage'\r\nimport DirectChatsPage from './DirectChatsPage'\r\nimport HomePage from './HomePage'\r\n\r\nclass RootPage extends Component {\r\n  render() {    \r\n    return (\r\n      <Router history={history}>\r\n        <Switch>\r\n          <Route path='/with_me' component={ChatWithMePage} />\r\n          <Route path='/direct' component={DirectChatsPage} />\r\n          <Route path='/:id' component={HomePage} />\r\n          <Route path='/' component={HomePage} />\r\n        </Switch>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  return { accounts: state.accounts }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n  return bindActionCreators({}, dispatch)\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RootPage)\r\n","import * as str from '../Actions/index.js';\r\n\r\nconst initialState = {};\r\n  \r\n// TODO: Name this AccountsReducer or something\r\nexport default function accountsReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case str.SIGN_IN_OK:\r\n            return {...action.payload}\r\n\r\n        case str.SIGN_OUT:\r\n            return initialState;\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux'\r\n\r\nimport accountsReducer from './AccountsReducer.js'\r\n\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\nexport default combineReducers({\r\n  accounts: accountsReducer,\r\n  form: formReducer,\r\n})\r\n","import React from 'react';\r\n\r\nimport './App.css';\r\nimport RootPage from './Pages';\r\n\r\nimport thunk from \"redux-thunk\";\r\nimport promise from 'redux-promise';\r\nimport rootReducer from './Reducers';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\n\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n\r\nconst persistConfig = { key: '2', storage };\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst createStoreWithMiddleware = applyMiddleware(promise, thunk)(createStore);\r\nexport const store = createStoreWithMiddleware(persistedReducer);\r\nconst persistor = persistStore(\r\n  store,\r\n  {},\r\n  () => {}\r\n);\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <RootPage />\r\n      </PersistGate>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import './index.css'\r\n\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}